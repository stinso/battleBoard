{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\src\\\\views\\\\gameInfo\\\\Rules.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {},\n  paper: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 30,\n    paddingRight: 30\n  }\n}));\n\nconst Rules = ({\n  className\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Player with the highest kills has the highest rank.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- In case of a tie, the player with fewer deaths is ranked higher. In cases there is still a tie, the player who enrolled first is ranked higher.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Gulag kills are not counted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Headshots are treated like any other kill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Private matches do not count towards your stats.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Stats of the matches that start and end within the time period of the event will only be counted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- End time is considered as time that the match ended, not the time you get killed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- It is a player's responsibility to ensure a stable network connection with the COD Servers.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rules, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Rules;\nRules.propTypes = {\n  className: PropTypes.string\n};\nexport default Rules;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rules\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/src/views/gameInfo/Rules.js"],"names":["React","PropTypes","Box","Grid","Paper","Typography","makeStyles","useStyles","root","paper","paddingTop","paddingBottom","paddingLeft","paddingRight","Rules","className","classes","typo","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,mBANP;;AASA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AAClCE,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,WAAW,EAAE,EAHR;AAILC,IAAAA,YAAY,EAAE;AAJT;AAF2B,CAAP,CAAD,CAA5B;;AAUA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC/B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAES,OAAO,CAACP,KAA1B;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEO,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAsBE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eAoCE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF,eA2CE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF,eAkDE,QAAC,UAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACC,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CA/DD;;GAAMH,K;UACYP,S;;;KADZO,K;AAiENA,KAAK,CAACI,SAAN,GAAkB;AAChBH,EAAAA,SAAS,EAAEd,SAAS,CAACkB;AADL,CAAlB;AAIA,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  paper: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingLeft: 30,\r\n    paddingRight: 30\r\n  }\r\n}));\r\n\r\nconst Rules = ({ className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography \r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Player with the highest kills has the highest rank.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - In case of a tie, the player with fewer deaths is ranked higher. In cases there is still a tie, the player who enrolled first is ranked higher.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Gulag kills are not counted.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Headshots are treated like any other kill\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Private matches do not count towards your stats.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Stats of the matches that start and end within the time period of the event will only be counted.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - End time is considered as time that the match ended, not the time you get killed.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - It is a player's responsibility to ensure a stable network connection with the COD Servers.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nRules.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Rules;\r\n"]},"metadata":{},"sourceType":"module"}