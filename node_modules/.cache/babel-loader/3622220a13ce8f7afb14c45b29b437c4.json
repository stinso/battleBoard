{"ast":null,"code":"import { LOGOUT_REQUEST, LOGIN_REQUEST, SET_USER_INFO, SET_NOTIFICATION_EVENT, SET_CHALLENGE_TAB, DO_NOT_SHOW_WIZARD } from '../actions/actions.js';\nimport Cookies from \"js-cookie\";\nimport { CookieName } from '../config/constants';\nimport { ContactsOutlined } from '@material-ui/icons';\nexport let SessionID = Cookies.get(CookieName);\n_c = SessionID;\nexport const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case LOGOUT_REQUEST:\n      Cookies.remove(CookieName);\n      SessionID = '';\n      return { ...state,\n        user: {\n          isLoggedIn: false\n        }\n      };\n\n    case LOGIN_REQUEST:\n      console.log(CookieName);\n      SessionID = Cookies.get(CookieName);\n      console.log('session id:');\n      console.log(SessionID);\n      console.log(Cookies.get);\n      return { ...state,\n        user: { ...state.user,\n          isLoggedIn: true,\n          session: { ...action.payload\n          }\n        }\n      };\n\n    case SET_USER_INFO:\n      SessionID = Cookies.get(CookieName);\n      return { ...state,\n        user: { ...state.user,\n          isLoggedIn: true,\n          session: { ...action.payload\n          }\n        }\n      };\n\n    case SET_CHALLENGE_TAB:\n      SessionID = Cookies.get(CookieName);\n      return { ...state,\n        user: { ...state.user,\n          challenges: { ...action.payload\n          }\n        }\n      };\n\n    case SET_NOTIFICATION_EVENT:\n      return { ...state,\n        user: { ...state.user,\n          eventInfo: { ...state.user.eventInfo,\n            [action.payload.eventID]: {\n              [action.payload.notificationType]: { ...action.payload.notificationInfo,\n                time: Math.floor(Date.now() / 1000)\n              }\n            }\n          }\n        }\n      };\n\n    case DO_NOT_SHOW_WIZARD:\n      return { ...state,\n        user: { ...state.user,\n          doNotShowWizard: true\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n_c2 = AuthReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SessionID\");\n$RefreshReg$(_c2, \"AuthReducer\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/reducer/reducer.js"],"names":["LOGOUT_REQUEST","LOGIN_REQUEST","SET_USER_INFO","SET_NOTIFICATION_EVENT","SET_CHALLENGE_TAB","DO_NOT_SHOW_WIZARD","Cookies","CookieName","ContactsOutlined","SessionID","get","AuthReducer","state","action","type","remove","user","isLoggedIn","console","log","session","payload","challenges","eventInfo","eventID","notificationType","notificationInfo","time","Math","floor","Date","now","doNotShowWizard"],"mappings":"AAAA,SACIA,cADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,sBAJJ,EAKIC,iBALJ,EAMIC,kBANJ,QAOS,uBAPT;AAQA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAGA,OAAO,IAAIC,SAAS,GAAIH,OAAO,CAACI,GAAR,CAAYH,UAAZ,CAAjB;KAAIE,S;AAET,OAAO,MAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AACEM,MAAAA,OAAO,CAACS,MAAR,CAAeR,UAAf;AACAE,MAAAA,SAAS,GAAG,EAAZ;AACE,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,IAAI,EAAE;AACFC,UAAAA,UAAU,EAAE;AADV;AAFH,OAAP;;AAMJ,SAAKhB,aAAL;AACEiB,MAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACAE,MAAAA,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAYH,UAAZ,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACI,GAApB;AACA,aAAO,EACL,GAAGE,KADE;AAELI,QAAAA,IAAI,EAAE,EACF,GAAGJ,KAAK,CAACI,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFG,UAAAA,OAAO,EAAE,EACP,GAAGP,MAAM,CAACQ;AADH;AAHP;AAFD,OAAP;;AAUA,SAAKnB,aAAL;AACAO,MAAAA,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAYH,UAAZ,CAAZ;AACA,aAAO,EACL,GAAGK,KADE;AAELI,QAAAA,IAAI,EAAE,EACF,GAAGJ,KAAK,CAACI,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFG,UAAAA,OAAO,EAAE,EACP,GAAGP,MAAM,CAACQ;AADH;AAHP;AAFD,OAAP;;AAUA,SAAKjB,iBAAL;AACEK,MAAAA,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAYH,UAAZ,CAAZ;AACA,aAAO,EACL,GAAGK,KADE;AAELI,QAAAA,IAAI,EAAE,EACF,GAAGJ,KAAK,CAACI,IADP;AAEJM,UAAAA,UAAU,EAAE,EACR,GAAGT,MAAM,CAACQ;AADF;AAFR;AAFD,OAAP;;AASF,SAAKlB,sBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELI,QAAAA,IAAI,EAAE,EACF,GAAGJ,KAAK,CAACI,IADP;AAEFO,UAAAA,SAAS,EAAE,EACT,GAAGX,KAAK,CAACI,IAAN,CAAWO,SADL;AAET,aAACV,MAAM,CAACQ,OAAP,CAAeG,OAAhB,GAA2B;AACzB,eAACX,MAAM,CAACQ,OAAP,CAAeI,gBAAhB,GAAmC,EACjC,GAAGZ,MAAM,CAACQ,OAAP,CAAeK,gBADe;AAEjCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB;AAF2B;AADV;AAFlB;AAFT;AAFD,OAAP;;AAeA,SAAK1B,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,IAAI,EAAE,EACJ,GAAGJ,KAAK,CAACI,IADL;AAEJgB,UAAAA,eAAe,EAAE;AAFb;AAFD,OAAP;;AAON;AACE,aAAOpB,KAAP;AA1EJ;AA4ED,CA7EM;MAAMD,W","sourcesContent":["import {\r\n    LOGOUT_REQUEST, \r\n    LOGIN_REQUEST, \r\n    SET_USER_INFO,\r\n    SET_NOTIFICATION_EVENT,\r\n    SET_CHALLENGE_TAB,\r\n    DO_NOT_SHOW_WIZARD,\r\n  } from '../actions/actions.js';\r\nimport Cookies from \"js-cookie\";\r\nimport { CookieName } from '../config/constants';\r\nimport { ContactsOutlined } from '@material-ui/icons';\r\n\r\n\r\nexport let SessionID =  Cookies.get(CookieName);\r\n\r\n  export const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case LOGOUT_REQUEST:\r\n        Cookies.remove(CookieName)\r\n        SessionID = '';\r\n          return {\r\n              ...state,\r\n              user: {\r\n                  isLoggedIn: false,\r\n              },\r\n            };\r\n      case LOGIN_REQUEST:\r\n        console.log(CookieName)\r\n        SessionID = Cookies.get(CookieName)\r\n        console.log('session id:')\r\n        console.log(SessionID)\r\n        console.log(Cookies.get)\r\n        return {\r\n          ...state,\r\n          user: {\r\n              ...state.user,\r\n              isLoggedIn: true,\r\n              session: {\r\n                ...action.payload\r\n              }\r\n          },\r\n        };\r\n        case SET_USER_INFO:\r\n        SessionID = Cookies.get(CookieName)\r\n        return {\r\n          ...state,\r\n          user: {\r\n              ...state.user,\r\n              isLoggedIn: true,\r\n              session: {\r\n                ...action.payload\r\n              }\r\n          },\r\n        };\r\n        case SET_CHALLENGE_TAB:\r\n          SessionID = Cookies.get(CookieName)\r\n          return {\r\n            ...state,\r\n            user: {\r\n                ...state.user,\r\n              challenges: {\r\n                  ...action.payload,\r\n                }\r\n            },\r\n          };\r\n        case SET_NOTIFICATION_EVENT:\r\n          return {\r\n            ...state,\r\n            user: {\r\n                ...state.user,\r\n                eventInfo: {\r\n                  ...state.user.eventInfo,\r\n                  [action.payload.eventID] : {\r\n                    [action.payload.notificationType]: {\r\n                      ...action.payload.notificationInfo,\r\n                      time: Math.floor(Date.now() / 1000),\r\n                    },\r\n                  }\r\n                }\r\n            },\r\n          }\r\n          case DO_NOT_SHOW_WIZARD:\r\n            return {\r\n              ...state,\r\n              user: {\r\n                ...state.user,\r\n                doNotShowWizard: true, \r\n              },\r\n            }\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}