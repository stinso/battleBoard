{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\profile\\\\MatchHistory.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Box, Button, Card, Container, Divider, Grid, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, useTheme, useMediaQuery, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst events = [{\n  id: \"1\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Won\",\n  startTime: \"00:00:04:23\"\n}, {\n  id: \"2\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Won\",\n  startTime: \"00:00:05:23\"\n}, {\n  id: \"3\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Lost\",\n  startTime: \"00:01:04:23\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingBottom: 200,\n    paddingTop: 100,\n    minHeight: '100%',\n    [theme.breakpoints.down('md')]: {\n      paddingTop: 0,\n      paddingBottom: 60\n    },\n    margin: 0\n  },\n  card: {\n    minHeight: \"200px\",\n    padding: theme.spacing(4)\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  },\n  rowImage: {\n    height: '48px',\n    width: '48px',\n    margin: 0,\n    padding: 0,\n    verticalAlign: 'top'\n  },\n  imageCell: {\n    height: '48px',\n    width: '48px',\n    padding: 0\n  },\n  accordion: {\n    marginTop: theme.spacing(4)\n  },\n  title: {\n    fontFamily: font,\n    fontSize: 32\n  },\n  userName: {\n    fontFamily: font,\n    fontSize: 24\n  },\n  statusesButton: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  waiting: {\n    color: '#388e3c'\n  }\n}));\n\nconst applyPagination = (list, page, limit) => {\n  return list.slice(page * limit, page * limit + limit);\n};\n\nconst MatchHistory = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const paginatedEvents = applyPagination(events, page, limit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h2\",\n      color: \"textPrimary\",\n      children: \"Match History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.statusesButton,\n      \"aria-controls\": \"menu-shooter\",\n      \"aria-haspopup\": \"true\",\n      color: \"secondary\",\n      variant: \"outlined\"\n      /* onClick={handleMenuShooter} */\n      ,\n      children: [\"All Statuses\", /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Event Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Game Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: paginatedEvents.map(entry => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            spacing: 0,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.game\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.eventName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.format\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: entry.entry == 'Free' && 'secondary',\n                variant: \"body2\",\n                children: entry.entry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: entry.status == 'Waiting' && classes.waiting,\n                variant: \"body2\",\n                children: entry.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.startTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: events.length,\n      labelRowsPerPage: 'Rows per page',\n      onChangePage: handlePageChange,\n      onChangeRowsPerPage: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MatchHistory, \"av3SBbu0/TLXSsUG3AD9++U6Uq0=\", false, function () {\n  return [useStyles];\n});\n\n_c = MatchHistory;\nMatchHistory.propTypes = {\n  className: PropTypes.string\n};\nexport default MatchHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchHistory\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/profile/MatchHistory.js"],"names":["React","Avatar","Box","Button","Card","Container","Divider","Grid","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","useTheme","useMediaQuery","makeStyles","events","id","game","eventName","format","entry","status","result","startTime","useStyles","theme","root","backgroundColor","palette","background","dark","paddingBottom","paddingTop","minHeight","breakpoints","down","margin","card","padding","spacing","avatar","cursor","width","height","rowImage","verticalAlign","imageCell","accordion","marginTop","title","fontFamily","font","fontSize","userName","statusesButton","button","marginLeft","marginBottom","waiting","color","applyPagination","list","page","limit","slice","MatchHistory","className","rest","classes","setPage","useState","setLimit","handlePageChange","event","newPage","handleLimitChange","parseInt","target","value","paginatedEvents","map","length","propTypes","PropTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    SvgIcon,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Typography,\r\n    useTheme,\r\n    useMediaQuery,\r\n    makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst events = [\r\n    {\r\n      id: \"1\",\r\n      game: \"COD - MW\",\r\n      eventName: \"Free MW\",\r\n      format: \"Warzone - Max Kills\",\r\n      entry: \"Free\",\r\n      status: \"Waiting\",\r\n      result: \"Won\",\r\n      startTime: \"00:00:04:23\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      game: \"COD - MW\",\r\n      eventName: \"Free MW\",\r\n      format: \"Warzone - Max Kills\",\r\n      entry: \"Free\",\r\n      status: \"Waiting\",\r\n      result: \"Won\",\r\n      startTime: \"00:00:05:23\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      game: \"COD - MW\",\r\n      eventName: \"Free MW\",\r\n      format: \"Warzone - Max Kills\",\r\n      entry: \"Free\",\r\n      status: \"Waiting\",\r\n      result: \"Lost\",\r\n      startTime: \"00:01:04:23\"\r\n    }\r\n  ]\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.dark,\r\n      paddingBottom: 200,\r\n      paddingTop: 100,\r\n      minHeight: '100%',\r\n      [theme.breakpoints.down('md')]: {\r\n        paddingTop: 0,\r\n        paddingBottom: 60\r\n      },\r\n      margin: 0\r\n    },\r\n    card: {\r\n      minHeight: \"200px\",\r\n      padding: theme.spacing(4)\r\n    },\r\n    avatar: {\r\n      cursor: 'pointer',\r\n      width: 64,\r\n      height: 64\r\n    },\r\n    rowImage: {\r\n      height: '48px',\r\n      width: '48px',\r\n      margin: 0,\r\n      padding: 0,\r\n      verticalAlign: 'top'\r\n    },\r\n    imageCell: {\r\n      height: '48px',\r\n      width: '48px',\r\n      padding: 0\r\n    },\r\n    accordion: {\r\n      marginTop: theme.spacing(4)\r\n    },\r\n    title: {\r\n      fontFamily: font,\r\n      fontSize: 32\r\n    },\r\n    userName: {\r\n      fontFamily: font,\r\n      fontSize: 24\r\n    },\r\n    statusesButton: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      marginLeft: theme.spacing(2),\r\n      marginBottom: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    waiting: {\r\n      color: '#388e3c'\r\n    }\r\n  }));\r\n\r\n  const applyPagination = (list, page, limit) => {\r\n    return list.slice(page * limit, page * limit + limit);\r\n  };\r\n\r\nconst MatchHistory = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n\r\n    const handlePageChange = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleLimitChange = (event) => {\r\n        setLimit(parseInt(event.target.value));\r\n    };\r\n\r\n    const paginatedEvents = applyPagination(events, page, limit);\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                className={classes.title}\r\n                variant=\"h2\"\r\n                color=\"textPrimary\"\r\n            >\r\n                Match History\r\n            </Typography>\r\n            <Button\r\n                className={classes.statusesButton}\r\n                aria-controls=\"menu-shooter\"\r\n                aria-haspopup=\"true\"\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                /* onClick={handleMenuShooter} */\r\n            >\r\n                All Statuses\r\n                <ArrowDropDownIcon />\r\n            </Button>\r\n            <Table>\r\n                <TableHead>\r\n                <TableRow >\r\n                    <TableCell>\r\n                    Game\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Event Name\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Game Format\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Entry\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Status\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Start Time\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    Result\r\n                    </TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {paginatedEvents.map((entry) => {\r\n                    return (\r\n                    <TableRow\r\n                        spacing={0}\r\n                        hover\r\n                        key={entry.id}\r\n                    >\r\n                        <TableCell>\r\n                        {entry.game}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {entry.eventName}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {entry.format}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <Typography\r\n                            color={entry.entry == 'Free' && 'secondary'}\r\n                            variant=\"body2\"\r\n                        >\r\n                            {entry.entry}\r\n                        </Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <Typography\r\n                            className={entry.status == 'Waiting' && classes.waiting}\r\n                            variant=\"body2\"\r\n                        >\r\n                            {entry.status}\r\n                        </Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {entry.startTime}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {entry.result}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                component=\"div\"\r\n                count={events.length}\r\n                labelRowsPerPage={'Rows per page'}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange}\r\n                page={page}\r\n                rowsPerPage={limit}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nMatchHistory.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n  \r\nexport default MatchHistory;"]},"metadata":{},"sourceType":"module"}