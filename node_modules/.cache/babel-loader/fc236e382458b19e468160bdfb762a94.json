{"ast":null,"code":"let etherscan = \"\",\n    projectID = process.env.REACT_APP_INFURA_PROJECT_ID,\n    maticRPC = '',\n    chainTokenMaticAddress = '',\n    chainId = '',\n    stakingContractAddress = '',\n    chainTokenAddress = '',\n    networkURL = '',\n    rewardAddress = '';\nconst ENV = process.env.REACT_APP_ETH_PROVIDER;\n\nswitch (ENV) {\n  case \"ropsten\":\n    etherscan = \"https://ropsten.etherscan.io/tx/\";\n    chainId = 3;\n    break;\n\n  case \"mainnet\":\n    etherscan = \"https://etherscan.io/tx/\";\n    maticRPC = \"https://rpc-mainnet.matic.network\";\n    rewardAddress = '0x6B78Ff6668D639DEb89363d8E24f2abe2D7Ab1bA';\n    chainTokenMaticAddress = '0xd55fCe7CDaB84d84f2EF3F99816D765a2a94a509';\n    stakingContractAddress = '0x9b7fcaebe9a69eceeab72142ed35a238775d179a';\n    chainTokenAddress = '0xC4C2614E694cF534D407Ee49F8E44D125E4681c4';\n    networkURL = `https://mainnet.infura.io/v3/${projectID}`;\n    chainId = 1;\n    break;\n\n  case \"kovan\":\n    etherscan = \"https://kovan.etherscan.io/tx/\";\n    maticRPC = \"https://rpc-mumbai.matic.today\";\n    chainTokenMaticAddress = '0x783288fb03079238dd917794ec16F812eB25B390';\n    rewardAddress = \"0xc9fd2bb8fdb697ea269948181458a7afa4a08378\";\n    chainId = 42;\n    break;\n\n  case \"goerli\":\n    etherscan = \"https://goerli.etherscan.io/tx/\";\n    rewardAddress = \"0xc9fd2bb8fdb697ea269948181458a7afa4a08378\";\n    maticRPC = \"https://rpc-mumbai.matic.today\";\n    chainTokenMaticAddress = '0x783288fb03079238dd917794ec16F812eB25B390';\n    stakingContractAddress = '0xA9F21E25C1fB0C55249942252e328Ee5eE2966AD';\n    chainTokenAddress = '0x76EBA9F21d659Fc15D5f33a1a0C7f9088D0FBd28';\n    networkURL = `https://goerli.infura.io/v3/${projectID}`;\n    chainId = 5;\n    break;\n\n  default:\n    etherscan = \"https://etherscan.io/tx/\";\n}\n\nexport const EtherScanLink = etherscan;\nexport const MaticRpcURL = maticRPC;\nexport const ChainTokenMaticAddress = chainTokenMaticAddress;\nexport const RewardAccount = rewardAddress;\nexport const ChainID = chainId;\nexport const StakingContractAddress = stakingContractAddress;\nexport const ChainTokenAddress = chainTokenAddress;\nexport const NetworkURL = networkURL;","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/config/constants.js"],"names":["etherscan","projectID","process","env","REACT_APP_INFURA_PROJECT_ID","maticRPC","chainTokenMaticAddress","chainId","stakingContractAddress","chainTokenAddress","networkURL","rewardAddress","ENV","REACT_APP_ETH_PROVIDER","EtherScanLink","MaticRpcURL","ChainTokenMaticAddress","RewardAccount","ChainID","StakingContractAddress","ChainTokenAddress","NetworkURL"],"mappings":"AAAA,IAAIA,SAAS,GAAC,EAAd;AAAA,IACAC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,2BADxB;AAAA,IAEAC,QAAQ,GAAC,EAFT;AAAA,IAGAC,sBAAsB,GAAG,EAHzB;AAAA,IAIAC,OAAO,GAAG,EAJV;AAAA,IAKAC,sBAAsB,GAAG,EALzB;AAAA,IAMAC,iBAAiB,GAAG,EANpB;AAAA,IAOAC,UAAU,GAAG,EAPb;AAAA,IAQAC,aAAa,GAAG,EARhB;AAUA,MAAMC,GAAG,GAAGV,OAAO,CAACC,GAAR,CAAYU,sBAAxB;;AACE,QAAQD,GAAR;AACE,OAAK,SAAL;AACEZ,IAAAA,SAAS,GAAE,kCAAX;AACAO,IAAAA,OAAO,GAAG,CAAV;AACA;;AACF,OAAK,SAAL;AACEP,IAAAA,SAAS,GAAE,0BAAX;AACAK,IAAAA,QAAQ,GAAG,mCAAX;AACAM,IAAAA,aAAa,GAAG,4CAAhB;AACAL,IAAAA,sBAAsB,GAAG,4CAAzB;AACAE,IAAAA,sBAAsB,GAAG,4CAAzB;AACAC,IAAAA,iBAAiB,GAAG,4CAApB;AACAC,IAAAA,UAAU,GAAI,gCAA+BT,SAAU,EAAvD;AACAM,IAAAA,OAAO,GAAG,CAAV;AACA;;AACF,OAAK,OAAL;AACEP,IAAAA,SAAS,GAAE,gCAAX;AACAK,IAAAA,QAAQ,GAAE,gCAAV;AACAC,IAAAA,sBAAsB,GAAG,4CAAzB;AACAK,IAAAA,aAAa,GAAE,4CAAf;AACAJ,IAAAA,OAAO,GAAG,EAAV;AACA;;AACF,OAAK,QAAL;AACEP,IAAAA,SAAS,GAAE,iCAAX;AACAW,IAAAA,aAAa,GAAE,4CAAf;AACAN,IAAAA,QAAQ,GAAE,gCAAV;AACAC,IAAAA,sBAAsB,GAAG,4CAAzB;AACAE,IAAAA,sBAAsB,GAAG,4CAAzB;AACAC,IAAAA,iBAAiB,GAAG,4CAApB;AACAC,IAAAA,UAAU,GAAI,+BAA8BT,SAAU,EAAtD;AACAM,IAAAA,OAAO,GAAG,CAAV;AACA;;AACF;AAASP,IAAAA,SAAS,GAAE,0BAAX;AAhCX;;AAmCF,OAAO,MAAMc,aAAa,GAAGd,SAAtB;AACP,OAAO,MAAMe,WAAW,GAAGV,QAApB;AACP,OAAO,MAAMW,sBAAsB,GAAGV,sBAA/B;AACP,OAAO,MAAMW,aAAa,GAAGN,aAAtB;AACP,OAAO,MAAMO,OAAO,GAAGX,OAAhB;AACP,OAAO,MAAMY,sBAAsB,GAAGX,sBAA/B;AACP,OAAO,MAAMY,iBAAiB,GAAGX,iBAA1B;AACP,OAAO,MAAMY,UAAU,GAAGX,UAAnB","sourcesContent":["let etherscan=\"\",\r\nprojectID = process.env.REACT_APP_INFURA_PROJECT_ID,\r\nmaticRPC='',\r\nchainTokenMaticAddress = '',\r\nchainId = '',\r\nstakingContractAddress = '',\r\nchainTokenAddress = '',\r\nnetworkURL = '',\r\nrewardAddress = '';\r\n\r\nconst ENV = process.env.REACT_APP_ETH_PROVIDER;\r\n  switch (ENV) {\r\n    case \"ropsten\":\r\n      etherscan =\"https://ropsten.etherscan.io/tx/\";\r\n      chainId = 3;\r\n      break;\r\n    case \"mainnet\":\r\n      etherscan =\"https://etherscan.io/tx/\";\r\n      maticRPC = \"https://rpc-mainnet.matic.network\";\r\n      rewardAddress = '0x6B78Ff6668D639DEb89363d8E24f2abe2D7Ab1bA';\r\n      chainTokenMaticAddress = '0xd55fCe7CDaB84d84f2EF3F99816D765a2a94a509';\r\n      stakingContractAddress = '0x9b7fcaebe9a69eceeab72142ed35a238775d179a'\r\n      chainTokenAddress = '0xC4C2614E694cF534D407Ee49F8E44D125E4681c4'\r\n      networkURL = `https://mainnet.infura.io/v3/${projectID}`;\r\n      chainId = 1;\r\n      break;\r\n    case \"kovan\":\r\n      etherscan =\"https://kovan.etherscan.io/tx/\";\r\n      maticRPC =\"https://rpc-mumbai.matic.today\";\r\n      chainTokenMaticAddress = '0x783288fb03079238dd917794ec16F812eB25B390';\r\n      rewardAddress =\"0xc9fd2bb8fdb697ea269948181458a7afa4a08378\";\r\n      chainId = 42;\r\n      break;\r\n    case \"goerli\":\r\n      etherscan =\"https://goerli.etherscan.io/tx/\";\r\n      rewardAddress =\"0xc9fd2bb8fdb697ea269948181458a7afa4a08378\";\r\n      maticRPC =\"https://rpc-mumbai.matic.today\";\r\n      chainTokenMaticAddress = '0x783288fb03079238dd917794ec16F812eB25B390';\r\n      stakingContractAddress = '0xA9F21E25C1fB0C55249942252e328Ee5eE2966AD';\r\n      chainTokenAddress = '0x76EBA9F21d659Fc15D5f33a1a0C7f9088D0FBd28';\r\n      networkURL = `https://goerli.infura.io/v3/${projectID}`;\r\n      chainId = 5;\r\n      break;\r\n    default: etherscan =\"https://etherscan.io/tx/\";\r\n}\r\n\r\nexport const EtherScanLink = etherscan\r\nexport const MaticRpcURL = maticRPC;\r\nexport const ChainTokenMaticAddress = chainTokenMaticAddress;\r\nexport const RewardAccount = rewardAddress;\r\nexport const ChainID = chainId;\r\nexport const StakingContractAddress = stakingContractAddress;\r\nexport const ChainTokenAddress = chainTokenAddress;\r\nexport const NetworkURL = networkURL;"]},"metadata":{},"sourceType":"module"}