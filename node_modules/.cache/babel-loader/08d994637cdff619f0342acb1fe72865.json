{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useLocation, matchPath } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, Container, Divider, Grid, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, useTheme, useMediaQuery, makeStyles } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Download as DownloadIcon } from 'react-feather';\nimport { Monitor as MatchesIcon } from 'react-feather';\nimport { Link2 as NetworkIcon } from 'react-feather';\nimport { Users as FollowersIcon } from 'react-feather';\nimport { UserCheck as FollowingIcon } from 'react-feather'; // new\n\nimport defaultAvatar from \"../../assets/img/placeholder.jpg\";\nimport { userInfoService, followService, unFollowService, checkIsFollowingService, getBalanceFromCS } from '../../service/node.service';\nimport { AuthContext } from \"../../context/AuthContext\"; //import MatchHistory from \"./MatchHistory\";\n//import Followers from \"./Followers\";\n//import Following from \"./Following\";\n//import GamingNetworks from './GamingNetworks';\n//import ChallengeModal from '../challenges/ChallengeModal';\n//import ImageTagWithErrorImage from '../ImageConponentWithDefaultAvatar/index';\n\nimport { getFormattedUserName, formatInCHAIN } from '../../utils/helpers.js'; //import { useRouter } from \"next/router\";\n\nimport * as Sentry from \"@sentry/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Saira', sans-serif\";\nconst events = [{\n  id: \"1\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Won\",\n  startTime: \"00:00:04:23\"\n}, {\n  id: \"2\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Won\",\n  startTime: \"00:00:05:23\"\n}, {\n  id: \"3\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  result: \"Lost\",\n  startTime: \"00:01:04:23\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingBottom: 200,\n    paddingTop: 100,\n    minHeight: '100%',\n    [theme.breakpoints.down('md')]: {\n      paddingTop: 0,\n      paddingBottom: 60\n    },\n    margin: 0\n  },\n  card: {\n    minHeight: \"200px\",\n    padding: theme.spacing(4)\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  },\n  rowImage: {\n    height: '48px',\n    width: '48px',\n    margin: 0,\n    padding: 0,\n    verticalAlign: 'top'\n  },\n  imageCell: {\n    height: '48px',\n    width: '48px',\n    padding: 0\n  },\n  accordion: {\n    marginTop: theme.spacing(4)\n  },\n  title: {\n    fontFamily: font,\n    fontSize: 32\n  },\n  userName: {\n    fontFamily: font,\n    fontSize: 24\n  },\n  statusesButton: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  waiting: {\n    color: '#388e3c'\n  }\n}));\n\nconst applyPagination = (list, page, limit) => {\n  return list.slice(page * limit, page * limit + limit);\n};\n\nconst Profile = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10); // new\n\n  const {\n    user,\n    dispatch\n  } = useContext(AuthContext); //const router = useRouter()\n  //const { username } = router.query\n\n  const username = \"mukki\";\n  const wrapper = useRef('wrapper'); //const [profileTabs, setProfileTabs] = useState(TabsEnum.MatchHistory);\n\n  const [imageURL, setImageURL] = useState(defaultAvatar);\n  const [name, setName] = useState('');\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [isBanned, setIsBanned] = useState(false);\n  const [isOwnProfile, setIsOwnProfile] = useState(true); //const [showChallengeModal, setShowChallengeModal] = useState(false);\n\n  const [chainNetworkBalance, setChainNetworkBalance] = useState(0);\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const paginatedEvents = applyPagination(events, page, limit);\n  useEffect(() => {\n    var _user$user, _user$user$session;\n\n    setIsOwnProfile(((_user$user = user.user) === null || _user$user === void 0 ? void 0 : (_user$user$session = _user$user.session) === null || _user$user$session === void 0 ? void 0 : _user$user$session.username) === username);\n  }, [user, username]);\n\n  async function getProfileInfo() {\n    if (username) {\n      try {\n        var _checkFollowing$data;\n\n        console.log(username);\n        const [userInfo, checkFollowing, balanceInfo] = await Promise.all([userInfoService({\n          username\n        }), checkIsFollowingService({\n          username\n        }), getBalanceFromCS({})]);\n        console.log(userInfo);\n        console.log(checkFollowing);\n        console.log(balanceInfo);\n\n        if ((checkFollowing === null || checkFollowing === void 0 ? void 0 : (_checkFollowing$data = checkFollowing.data) === null || _checkFollowing$data === void 0 ? void 0 : _checkFollowing$data.success) === true) {\n          setIsFollowing(checkFollowing.data.isFollowing);\n        }\n\n        if (balanceInfo.data.success) {\n          const networkFormatInChain = formatInCHAIN(balanceInfo.data.token.total);\n          setChainNetworkBalance(networkFormatInChain);\n        }\n\n        if (userInfo.data.success === true) {\n          var _userInfo$data, _userInfo$data2, _userInfo$data3, _userInfo$data4;\n\n          setName(userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$data = userInfo.data) === null || _userInfo$data === void 0 ? void 0 : _userInfo$data.username);\n          setIsBanned(userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$data2 = userInfo.data) === null || _userInfo$data2 === void 0 ? void 0 : _userInfo$data2.isBanned);\n          setImageURL((userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$data3 = userInfo.data) === null || _userInfo$data3 === void 0 ? void 0 : _userInfo$data3.dpHigh) ? userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$data4 = userInfo.data) === null || _userInfo$data4 === void 0 ? void 0 : _userInfo$data4.dpHigh : defaultAvatar);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n\n        console.log(\"ðŸš€ ~ file: ProfilePageSkeleton.jsx ~ line 89 ~ getProfileInfo ~ error\", error);\n        Sentry.captureException(error, {\n          tags: {\n            page: location.pathname\n          }\n        });\n\n        if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) === 'user not found') {\n          router.push('/404');\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    getProfileInfo();\n  }, [username]);\n\n  const handleFollowClick = async event => {\n    if (isFollowing === false) {\n      try {\n        const response = await followService({\n          username\n        });\n\n        if (response.data.success === true) {\n          setIsFollowing(true);\n        }\n      } catch (error) {\n        console.log(\"ðŸš€ ~ file: ProfilePageSkeleton.jsx ~ line 119 ~ handleFollowClick ~ error\", error);\n        Sentry.captureException(error, {\n          tags: {\n            page: location.pathname\n          }\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.avatar,\n                src: \"/static/images/panda.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              marginTop: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.userName,\n                  variant: \"body2\",\n                  color: \"textPrimary\",\n                  children: getFormattedUserName(name === null || name === void 0 ? void 0 : name.toUpperCase(), 9)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                mb: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  size: \"large\",\n                  variant: \"text\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(MatchesIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this),\n                  children: \"Matches\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  size: \"large\",\n                  variant: \"text\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(NetworkIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this),\n                  children: \"Gaming Networks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  size: \"large\",\n                  variant: \"text\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(FollowersIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this),\n                  children: \"Followers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  size: \"large\",\n                  variant: \"text\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                    fontSize: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(FollowingIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this),\n                  children: \"Following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              minWidth: 300,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                variant: \"h2\",\n                color: \"textPrimary\",\n                children: \"Match History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.statusesButton,\n                \"aria-controls\": \"menu-shooter\",\n                \"aria-haspopup\": \"true\",\n                color: \"secondary\",\n                variant: \"outlined\"\n                /* onClick={handleMenuShooter} */\n                ,\n                children: [\"All Statuses\", /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Event Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game Format\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Entry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Start Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Result\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: paginatedEvents.map(entry => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      spacing: 0,\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.game\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.eventName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.format\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          color: entry.entry == 'Free' && 'secondary',\n                          variant: \"body2\",\n                          children: entry.entry\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: entry.status == 'Waiting' && classes.waiting,\n                          variant: \"body2\",\n                          children: entry.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 419,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.startTime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.result\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 429,\n                        columnNumber: 27\n                      }, this)]\n                    }, entry.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                component: \"div\",\n                count: events.length,\n                labelRowsPerPage: 'Rows per page',\n                onChangePage: handlePageChange,\n                onChangeRowsPerPage: handleLimitChange,\n                page: page,\n                rowsPerPage: limit,\n                rowsPerPageOptions: [5, 10, 25]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"dNThtX6haEO0T4hYDjck8lIyV5A=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Profile;\nProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/profile/Profile.js"],"names":["React","useState","useEffect","useRef","useContext","PropTypes","clsx","useLocation","matchPath","Avatar","Box","Button","Card","Container","Divider","Grid","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","useTheme","useMediaQuery","makeStyles","ArrowDropDownIcon","Download","DownloadIcon","Monitor","MatchesIcon","Link2","NetworkIcon","Users","FollowersIcon","UserCheck","FollowingIcon","defaultAvatar","userInfoService","followService","unFollowService","checkIsFollowingService","getBalanceFromCS","AuthContext","getFormattedUserName","formatInCHAIN","Sentry","font","events","id","game","eventName","format","entry","status","result","startTime","useStyles","theme","root","backgroundColor","palette","background","dark","paddingBottom","paddingTop","minHeight","breakpoints","down","margin","card","padding","spacing","avatar","cursor","width","height","rowImage","verticalAlign","imageCell","accordion","marginTop","title","fontFamily","fontSize","userName","statusesButton","button","marginLeft","marginBottom","waiting","color","applyPagination","list","page","limit","slice","Profile","className","rest","classes","location","setPage","setLimit","user","dispatch","username","wrapper","imageURL","setImageURL","name","setName","isFollowing","setIsFollowing","isBanned","setIsBanned","isOwnProfile","setIsOwnProfile","chainNetworkBalance","setChainNetworkBalance","handlePageChange","event","newPage","handleLimitChange","parseInt","target","value","paginatedEvents","session","getProfileInfo","console","log","userInfo","checkFollowing","balanceInfo","Promise","all","data","success","networkFormatInChain","token","total","dpHigh","error","captureException","tags","pathname","response","router","push","handleFollowClick","toUpperCase","map","length","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useLocation, matchPath } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  SvgIcon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Download as DownloadIcon } from 'react-feather';\r\nimport { Monitor as MatchesIcon } from 'react-feather';\r\nimport { Link2 as NetworkIcon } from 'react-feather';\r\nimport { Users as FollowersIcon } from 'react-feather';\r\nimport { UserCheck as FollowingIcon } from 'react-feather';\r\n\r\n// new\r\nimport defaultAvatar from \"../../assets/img/placeholder.jpg\";\r\nimport {\r\n  userInfoService,\r\n  followService,\r\n  unFollowService,\r\n  checkIsFollowingService,\r\n  getBalanceFromCS,\r\n} from '../../service/node.service'\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n//import MatchHistory from \"./MatchHistory\";\r\n//import Followers from \"./Followers\";\r\n//import Following from \"./Following\";\r\n//import GamingNetworks from './GamingNetworks';\r\n//import ChallengeModal from '../challenges/ChallengeModal';\r\n//import ImageTagWithErrorImage from '../ImageConponentWithDefaultAvatar/index';\r\nimport {\r\n  getFormattedUserName,\r\n  formatInCHAIN,\r\n} from '../../utils/helpers.js';\r\n//import { useRouter } from \"next/router\";\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nconst font = \"'Saira', sans-serif\";\r\n\r\nconst events = [\r\n  {\r\n    id: \"1\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    result: \"Won\",\r\n    startTime: \"00:00:04:23\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    result: \"Won\",\r\n    startTime: \"00:00:05:23\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    result: \"Lost\",\r\n    startTime: \"00:01:04:23\"\r\n  }\r\n]\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: 200,\r\n    paddingTop: 100,\r\n    minHeight: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 0,\r\n      paddingBottom: 60\r\n    },\r\n    margin: 0\r\n  },\r\n  card: {\r\n    minHeight: \"200px\",\r\n    padding: theme.spacing(4)\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  },\r\n  rowImage: {\r\n    height: '48px',\r\n    width: '48px',\r\n    margin: 0,\r\n    padding: 0,\r\n    verticalAlign: 'top'\r\n  },\r\n  imageCell: {\r\n    height: '48px',\r\n    width: '48px',\r\n    padding: 0\r\n  },\r\n  accordion: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  title: {\r\n    fontFamily: font,\r\n    fontSize: 32\r\n  },\r\n  userName: {\r\n    fontFamily: font,\r\n    fontSize: 24\r\n  },\r\n  statusesButton: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  waiting: {\r\n    color: '#388e3c'\r\n  }\r\n}));\r\n\r\nconst applyPagination = (list, page, limit) => {\r\n  return list.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [page, setPage] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n\r\n  // new\r\n  const {user, dispatch} = useContext(AuthContext)\r\n  //const router = useRouter()\r\n  //const { username } = router.query\r\n  const username = \"mukki\"\r\n  const wrapper = useRef('wrapper');\r\n  //const [profileTabs, setProfileTabs] = useState(TabsEnum.MatchHistory);\r\n  const [imageURL, setImageURL] = useState(defaultAvatar);\r\n  const [name, setName] = useState('');\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n  const [isBanned, setIsBanned] = useState(false);\r\n  const [isOwnProfile, setIsOwnProfile] = useState(true);\r\n  //const [showChallengeModal, setShowChallengeModal] = useState(false);\r\n  const [chainNetworkBalance, setChainNetworkBalance] = useState(0);\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const paginatedEvents = applyPagination(events, page, limit);\r\n\r\n  useEffect(()=>{\r\n    setIsOwnProfile(user.user?.session?.username === username);\r\n  },[user, username])\r\n\r\n  async function getProfileInfo(){\r\n    if (username) {\r\n      try {\r\n        console.log(username)\r\n        const [ userInfo, checkFollowing, balanceInfo] = await Promise.all([\r\n          userInfoService({ username }),\r\n          checkIsFollowingService({ username }),\r\n          getBalanceFromCS({}),\r\n        ])\r\n  \r\n        console.log(userInfo)\r\n        console.log(checkFollowing)\r\n        console.log(balanceInfo)\r\n        \r\n        if(checkFollowing?.data?.success === true){\r\n          setIsFollowing(checkFollowing.data.isFollowing)\r\n        }\r\n  \r\n        if (balanceInfo.data.success) {\r\n          const networkFormatInChain = formatInCHAIN(balanceInfo.data.token.total);\r\n          setChainNetworkBalance(networkFormatInChain);\r\n        }\r\n  \r\n        if(userInfo.data.success === true){\r\n          setName(userInfo?.data?.username);\r\n          setIsBanned(userInfo?.data?.isBanned);\r\n          setImageURL(userInfo?.data?.dpHigh ? (userInfo?.data?.dpHigh) : defaultAvatar);\r\n        }\r\n      }\r\n      catch(error){\r\n        console.log(\"ðŸš€ ~ file: ProfilePageSkeleton.jsx ~ line 89 ~ getProfileInfo ~ error\", error)\r\n        Sentry.captureException(error, {\r\n          tags: {\r\n            page: location.pathname,\r\n          },\r\n        });\r\n        if (error?.response?.data?.error === 'user not found') {\r\n          router.push('/404');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getProfileInfo();\r\n  },[username])\r\n\r\n  const handleFollowClick = async (event) => {\r\n    if (isFollowing === false) {\r\n      try {\r\n        const response = await followService({ username });\r\n        if (response.data.success === true) {\r\n          setIsFollowing(true);\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(\"ðŸš€ ~ file: ProfilePageSkeleton.jsx ~ line 119 ~ handleFollowClick ~ error\", error)\r\n        Sentry.captureException(error, {\r\n          tags: {\r\n            page: location.pathname,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    > \r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} lg={4}>\r\n            <Card className={classes.card}>\r\n              <Box\r\n                display='flex'\r\n                justifyContent='center'\r\n              >\r\n                <Avatar className={classes.avatar} src=\"/static/images/panda.png\" />\r\n              </Box>\r\n              <Box \r\n                marginTop={2}\r\n              >\r\n                <Box \r\n                  display='flex'\r\n                  justifyContent='center'\r\n                  marginTop={1}\r\n                >\r\n                  <Typography\r\n                    className={classes.userName}\r\n                    variant=\"body2\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {getFormattedUserName(name?.toUpperCase(), 9)}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={4} mb={1}>\r\n                  <Button\r\n                    className={classes.button}\r\n                    size=\"large\"\r\n                    variant=\"text\"\r\n                    startIcon={\r\n                      <SvgIcon fontSize=\"small\">\r\n                        <MatchesIcon />\r\n                      </SvgIcon>\r\n                    }\r\n                  >\r\n                    Matches\r\n                  </Button>\r\n                </Box>\r\n                <Divider />\r\n                <Box>\r\n                  <Button\r\n                    className={classes.button}\r\n                    size=\"large\"\r\n                    variant=\"text\"\r\n                    startIcon={\r\n                      <SvgIcon fontSize=\"small\">\r\n                        <NetworkIcon />\r\n                      </SvgIcon>\r\n                    }\r\n                  >\r\n                    Gaming Networks\r\n                  </Button>\r\n                </Box>\r\n                <Divider />\r\n                <Box>\r\n                  <Button\r\n                    className={classes.button}\r\n                    size=\"large\"\r\n                    variant=\"text\"\r\n                    startIcon={\r\n                      <SvgIcon fontSize=\"small\">\r\n                        <FollowersIcon />\r\n                      </SvgIcon>\r\n                    }\r\n                  >\r\n                    Followers\r\n                  </Button>\r\n                </Box>\r\n                <Divider />\r\n                <Box>\r\n                  <Button\r\n                    className={classes.button}\r\n                    size=\"large\"\r\n                    variant=\"text\"\r\n                    startIcon={\r\n                      <SvgIcon fontSize=\"small\">\r\n                        <FollowingIcon/>\r\n                      </SvgIcon>\r\n                    }\r\n                  >\r\n                    Following\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} lg={8}>\r\n            <Card className={classes.card}>\r\n              <Box minWidth={300} >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  Match History\r\n                </Typography>\r\n                <Button\r\n                  className={classes.statusesButton}\r\n                  aria-controls=\"menu-shooter\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  /* onClick={handleMenuShooter} */\r\n                >\r\n                  All Statuses\r\n                  <ArrowDropDownIcon />\r\n                </Button>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow >\r\n                      <TableCell>\r\n                        Game\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Event Name\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Game Format\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Entry\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Status\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Start Time\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Result\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {paginatedEvents.map((entry) => {\r\n                      return (\r\n                        <TableRow\r\n                          spacing={0}\r\n                          hover\r\n                          key={entry.id}\r\n                        >\r\n                          <TableCell>\r\n                            {entry.game}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.eventName}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.format}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography\r\n                              color={entry.entry == 'Free' && 'secondary'}\r\n                              variant=\"body2\"\r\n                            >\r\n                              {entry.entry}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography\r\n                              className={entry.status == 'Waiting' && classes.waiting}\r\n                              variant=\"body2\"\r\n                            >\r\n                              {entry.status}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.startTime}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.result}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={events.length}\r\n                  labelRowsPerPage={'Rows per page'}\r\n                  onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange}\r\n                  page={page}\r\n                  rowsPerPage={limit}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n\r\n"]},"metadata":{},"sourceType":"module"}