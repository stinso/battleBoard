{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\context\\\\StakingContract\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { useReducer } from 'reinspect';\nimport StakingContract from \"./StakingContract\";\nimport initialState from \"./state\";\nimport stakeReducer from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakingContractContext = /*#__PURE__*/React.createContext();\nconst StakingContractDispatch = /*#__PURE__*/React.createContext();\n\nfunction StakingContractProvider({\n  children\n}) {\n  _s();\n\n  const [prodState, prodDispatch] = React.useReducer(stakeReducer, initialState);\n  const [devState, devDispatch] = useReducer(stakeReducer, initialState);\n  const state = process.env.NODE_ENV === 'development' ? devState : prodState;\n  const dispatch = process.env.NODE_ENV === 'development' ? devDispatch : prodDispatch;\n  const stakingContract = new StakingContract();\n  return /*#__PURE__*/_jsxDEV(StakingContractContext.Provider, {\n    value: {\n      stakingContract,\n      state\n    },\n    children: /*#__PURE__*/_jsxDEV(StakingContractDispatch.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StakingContractProvider, \"J4p+Dz8u1YqjLv3SjWQaR9GrwdU=\");\n\n_c = StakingContractProvider;\n\nfunction useStakingContract() {\n  _s2();\n\n  const context = React.useContext(StakingContractContext);\n\n  if (context === undefined) {\n    throw new Error('useStakingContract must be used within a StakingContractProvider');\n  }\n\n  return context;\n}\n\n_s2(useStakingContract, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction useStakingDispatch() {\n  _s3();\n\n  const context = React.useContext(StakingContractDispatch);\n\n  if (context === undefined) {\n    throw new Error('useStakingDispatch must be used within a StakingContractProvider');\n  }\n\n  return context;\n}\n\n_s3(useStakingDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { StakingContractProvider, useStakingContract, useStakingDispatch };\n\nvar _c;\n\n$RefreshReg$(_c, \"StakingContractProvider\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/context/StakingContract/index.jsx"],"names":["React","useReducer","StakingContract","initialState","stakeReducer","StakingContractContext","createContext","StakingContractDispatch","StakingContractProvider","children","prodState","prodDispatch","devState","devDispatch","state","process","env","NODE_ENV","dispatch","stakingContract","useStakingContract","context","useContext","undefined","Error","useStakingDispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AAEA,MAAMC,sBAAsB,gBAAGL,KAAK,CAACM,aAAN,EAA/B;AACA,MAAMC,uBAAuB,gBAAGP,KAAK,CAACM,aAAN,EAAhC;;AAEA,SAASE,uBAAT,CAAiC;AAACC,EAAAA;AAAD,CAAjC,EAA6C;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACC,UAAN,CAAiBG,YAAjB,EAA+BD,YAA/B,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,UAAU,CAACG,YAAD,EAAeD,YAAf,CAA1C;AAEA,QAAMW,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCL,QAAzC,GAAoDF,SAAlE;AACA,QAAMQ,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCJ,WAAzC,GAAuDF,YAAxE;AAEA,QAAMQ,eAAe,GAAG,IAAIjB,eAAJ,EAAxB;AACA,sBACE,QAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAE;AAACiB,MAAAA,eAAD;AAAkBL,MAAAA;AAAlB,KAAxC;AAAA,2BACE,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,MAAA,KAAK,EAAEI,QAAzC;AAAA,gBAAoDT;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQD,uB;;KAAAA,uB;;AAeT,SAASY,kBAAT,GAA8B;AAAA;;AAC5B,QAAMC,OAAO,GAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,sBAAjB,CAAhB;;AACA,MAAIgB,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,kEAAV,CAAN;AACD;;AACD,SAAOH,OAAP;AACD;;IANQD,kB;;AAQT,SAASK,kBAAT,GAA8B;AAAA;;AAC5B,QAAMJ,OAAO,GAAGrB,KAAK,CAACsB,UAAN,CAAiBf,uBAAjB,CAAhB;;AACA,MAAIc,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,kEAAV,CAAN;AACD;;AACD,SAAOH,OAAP;AACD;;IANQI,kB;;AAST,SAAQjB,uBAAR,EAAiCY,kBAAjC,EAAqDK,kBAArD","sourcesContent":["import React from 'react'\r\nimport { useReducer } from 'reinspect';\r\nimport StakingContract from \"./StakingContract\";\r\nimport initialState from \"./state\";\r\nimport stakeReducer from \"./reducer\";\r\n\r\nconst StakingContractContext = React.createContext();\r\nconst StakingContractDispatch = React.createContext();\r\n\r\nfunction StakingContractProvider({children}) {\r\n  const [prodState, prodDispatch] = React.useReducer(stakeReducer, initialState);\r\n  const [devState, devDispatch] = useReducer(stakeReducer, initialState);\r\n\r\n  const state = process.env.NODE_ENV === 'development' ? devState : prodState;\r\n  const dispatch = process.env.NODE_ENV === 'development' ? devDispatch : prodDispatch;\r\n\r\n  const stakingContract = new StakingContract();\r\n  return (\r\n    <StakingContractContext.Provider value={{stakingContract, state}}>\r\n      <StakingContractDispatch.Provider value={dispatch}>{children}</StakingContractDispatch.Provider>\r\n    </StakingContractContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useStakingContract() {\r\n  const context = React.useContext(StakingContractContext);\r\n  if (context === undefined) {\r\n    throw new Error('useStakingContract must be used within a StakingContractProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nfunction useStakingDispatch() {\r\n  const context = React.useContext(StakingContractDispatch);\r\n  if (context === undefined) {\r\n    throw new Error('useStakingDispatch must be used within a StakingContractProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n\r\nexport {StakingContractProvider, useStakingContract, useStakingDispatch}\r\n"]},"metadata":{},"sourceType":"module"}