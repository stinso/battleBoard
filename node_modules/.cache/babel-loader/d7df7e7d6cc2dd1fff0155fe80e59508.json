{"ast":null,"code":"const {\n  nodeAxios,\n  nodeAxiosWithCredentials,\n  axiosCoinGecko,\n  formDataAxiosServiceCentralServer,\n  nodeAxiosForXbox,\n  formDataAxiosService,\n  nodeAxiosWithCredentialsCentralServer\n} = require(\"../config/axios\");\n\nexport const registerUser = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/register`, body);\n};\nexport const loginService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/login`, body);\n};\nexport const logoutService = async () => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/authenticated/logout`, {});\n};\nexport const getBalanceFromCS = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/authenticated/get-balance`, body);\n};\nexport const postReportIssue = async body => {\n  return await formDataAxiosServiceCentralServer.post(`/authenticated/report-issue`, body);\n};\nexport const verifyEmailService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/verify-email-token`, body);\n};\nexport const recoverPassword = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/send-reset-link`, body);\n};\nexport const verifyForgotPasswordTokenService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/verify-forgot-password-token`, body);\n};\nexport const resetForgottenPasswordService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/reset-forgotten-password`, body);\n};\nexport const convertChaintoUSDService = async body => {\n  return await axiosCoinGecko.get();\n};\nexport const getMyEventsService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-all-events`, body);\n}; //Notifications Services\n\nexport const notificationPollingService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/my-notification`, body);\n};\nexport const markNotificationReadService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/mark-read`, body);\n};\nexport const getEventDetailsFromId = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-event-details`, body);\n};\nexport const getLiveStatsFromID = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-event-stats`, body);\n};\nexport const enrollInAnEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`/authenticated/enroll-in-event`, body);\n};\nexport const enrollInASponsoredEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`/authenticated/enroll-in-sponsored-event`, body);\n};\nexport const disenrollFromEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/disenroll-from-event`, body);\n};\nexport const getTotalWinningsService = async body => {\n  return await formDataAxiosService.post(`authenticated/get-total-winnings`, body);\n};\nexport const getTotalEventsService = async body => {\n  return await formDataAxiosService.post(`authenticated/get-total-events-played`, body);\n}; //Profile Page APIs below\n\nexport const uploadProfileImageService = async body => {\n  return await formDataAxiosServiceCentralServer.post(`authenticated/set-user-dp`, body);\n};\nexport const getHistoricalEventsService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-historical-events`, body);\n};\nexport const userInfoService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-user-info`, body);\n};\nexport const getMyInfoService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-my-info`, body);\n}; //Admin Panel APIs below\n//Single event APIs\n\nexport const getEventsService = async body => {\n  return await nodeAxiosWithCredentials.post(`public/get-upcoming-events`, body);\n};\nexport const adminAddEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/schedule-event`, body);\n};\nexport const adminUpdateEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/update-event`, body);\n};\nexport const adminDeleteEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/delete-event`, body);\n}; //Recurring Events APIs \n\nexport const getRecurringEventsService = async body => {\n  return await nodeAxiosWithCredentials.post(`/admin/get-recurring-events`, body);\n};\nexport const adminAddRecurringEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/schedule-recurring-event`, body);\n};\nexport const adminDeleteRecurringEventService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/delete-recurring-event`, body);\n}; //Random Admin Central Server APIS\n\nexport const adminVerifyEmailService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`admin/verify-email`, body);\n};\nexport const adminChangeEmailService = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`admin/change-email`, body);\n};\nexport const changeUserPassword = async body => {\n  return await nodeAxiosWithCredentialsCentralServer.post(`authenticated/change-password`, body);\n};\nexport const getLinkedNetworkService = async body => {\n  return await nodeAxiosWithCredentials.post(`public/get-linked-networks`, body);\n};\nexport const deleteLinkedNetworkService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/delete-linked-network`, body);\n};\nexport const linkOAuthNetwork = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/link-oauth-network`, body);\n};\nexport const getOAuthURL = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-oauth-code-url`, body);\n}; //Followers and Following Services\n\nexport const followService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/follow`, body);\n};\nexport const checkIsFollowingService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/is-following`, body);\n};\nexport const getFollowersService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-followers`, body);\n};\nexport const getFollowingService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-followings`, body);\n};\nexport const unFollowService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/unfollow`, body);\n}; //Challenges Services\n\nexport const createChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/create-challenge`, body);\n};\nexport const cancelChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/cancel-challenge`, body);\n};\nexport const acceptChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/accept-challenge`, body);\n};\nexport const rejectChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/reject-challenge`, body);\n};\nexport const modifyChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/modify-challenge`, body);\n};\nexport const getChallengeService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/get-challenges`, body);\n}; //Madden Support APIS\n\nexport const submitEventResultService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/user-attestation`, body);\n};\nexport const submitEvidenceService = async body => {\n  return await formDataAxiosService.post(`authenticated/submit-winning-proof`, body);\n};\nexport const getDisputesService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/get-conflicted-events`, body);\n};\nexport const resolveDisputeService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/winner-attestation`, body);\n};\nexport const addPSNTagService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/link-network`, body);\n};\nexport const getBannedPlayersService = async () => {\n  return await nodeAxiosWithCredentials.get(`admin/get-banned-users`);\n};\nexport const unbanPlayerService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/unban-user`, body);\n};\nexport const sendSubscriptionOfServiceWorkerService = async body => {\n  return await nodeAxiosWithCredentials.post(`authenticated/register-subscription`, body);\n};\nexport const claimNetworkService = async body => {\n  return await formDataAxiosService.post(`authenticated/claim-network-account`, body);\n};\nexport const getNetworkClaimsService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/get-network-account-claim`, body);\n};\nexport const approveNetworkClaimService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/approve-network-account-claim`, body);\n};\nexport const rejectNetworkClaimService = async body => {\n  return await nodeAxiosWithCredentials.post(`admin/reject-network-account-claim`, body);\n};","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/service/node.service.js"],"names":["nodeAxios","nodeAxiosWithCredentials","axiosCoinGecko","formDataAxiosServiceCentralServer","nodeAxiosForXbox","formDataAxiosService","nodeAxiosWithCredentialsCentralServer","require","registerUser","body","post","loginService","logoutService","getBalanceFromCS","postReportIssue","verifyEmailService","recoverPassword","verifyForgotPasswordTokenService","resetForgottenPasswordService","convertChaintoUSDService","get","getMyEventsService","notificationPollingService","markNotificationReadService","getEventDetailsFromId","getLiveStatsFromID","enrollInAnEventService","enrollInASponsoredEventService","disenrollFromEventService","getTotalWinningsService","getTotalEventsService","uploadProfileImageService","getHistoricalEventsService","userInfoService","getMyInfoService","getEventsService","adminAddEventService","adminUpdateEventService","adminDeleteEventService","getRecurringEventsService","adminAddRecurringEventService","adminDeleteRecurringEventService","adminVerifyEmailService","adminChangeEmailService","changeUserPassword","getLinkedNetworkService","deleteLinkedNetworkService","linkOAuthNetwork","getOAuthURL","followService","checkIsFollowingService","getFollowersService","getFollowingService","unFollowService","createChallengeService","cancelChallengeService","acceptChallengeService","rejectChallengeService","modifyChallengeService","getChallengeService","submitEventResultService","submitEvidenceService","getDisputesService","resolveDisputeService","addPSNTagService","getBannedPlayersService","unbanPlayerService","sendSubscriptionOfServiceWorkerService","claimNetworkService","getNetworkClaimsService","approveNetworkClaimService","rejectNetworkClaimService"],"mappings":"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","sourcesContent":["const { nodeAxios, nodeAxiosWithCredentials,\r\n  axiosCoinGecko, formDataAxiosServiceCentralServer,\r\n  nodeAxiosForXbox, formDataAxiosService,\r\n  nodeAxiosWithCredentialsCentralServer } = require(\"../config/axios\");\r\n\r\nexport const registerUser = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/register`, body)\r\n}\r\n\r\nexport const loginService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/login`, body);\r\n};\r\n\r\nexport const logoutService = async () => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/authenticated/logout`, {});\r\n};\r\n\r\nexport const getBalanceFromCS = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/authenticated/get-balance`, body);\r\n};\r\n\r\nexport const postReportIssue = async (body) => {\r\n  return await formDataAxiosServiceCentralServer.post(`/authenticated/report-issue`, body);\r\n};\r\n\r\nexport const verifyEmailService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/verify-email-token`, body);\r\n};\r\n\r\nexport const recoverPassword = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/send-reset-link`, body)\r\n}\r\n\r\nexport const verifyForgotPasswordTokenService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/verify-forgot-password-token`, body);\r\n};\r\n\r\nexport const resetForgottenPasswordService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(`/public/reset-forgotten-password`, body);\r\n};\r\n\r\nexport const convertChaintoUSDService = async (body) => {\r\n  return await axiosCoinGecko.get();\r\n};\r\n\r\nexport const getMyEventsService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-all-events`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n//Notifications Services\r\nexport const notificationPollingService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/my-notification`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const markNotificationReadService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/mark-read`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getEventDetailsFromId = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-event-details`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getLiveStatsFromID = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-event-stats`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const enrollInAnEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `/authenticated/enroll-in-event`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const enrollInASponsoredEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `/authenticated/enroll-in-sponsored-event`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\nexport const disenrollFromEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/disenroll-from-event`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getTotalWinningsService = async (body) => {\r\n  return await formDataAxiosService.post(\r\n    `authenticated/get-total-winnings`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getTotalEventsService = async (body) => {\r\n  return await formDataAxiosService.post(\r\n    `authenticated/get-total-events-played`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n\r\n//Profile Page APIs below\r\nexport const uploadProfileImageService = async (body) => {\r\n  return await formDataAxiosServiceCentralServer.post(\r\n    `authenticated/set-user-dp`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getHistoricalEventsService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-historical-events`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const userInfoService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-user-info`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getMyInfoService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-my-info`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n\r\n//Admin Panel APIs below\r\n\r\n//Single event APIs\r\nexport const getEventsService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `public/get-upcoming-events`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const adminAddEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/schedule-event`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const adminUpdateEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/update-event`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const adminDeleteEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/delete-event`,\r\n    body\r\n  );\r\n};\r\n\r\n//Recurring Events APIs \r\nexport const getRecurringEventsService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `/admin/get-recurring-events`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const adminAddRecurringEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/schedule-recurring-event`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\nexport const adminDeleteRecurringEventService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/delete-recurring-event`,\r\n    body\r\n  );\r\n};\r\n\r\n//Random Admin Central Server APIS\r\nexport const adminVerifyEmailService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(\r\n    `admin/verify-email`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const adminChangeEmailService = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(\r\n    `admin/change-email`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const changeUserPassword = async (body) => {\r\n  return await nodeAxiosWithCredentialsCentralServer.post(\r\n    `authenticated/change-password`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getLinkedNetworkService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `public/get-linked-networks`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const deleteLinkedNetworkService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/delete-linked-network`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const linkOAuthNetwork = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/link-oauth-network`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getOAuthURL = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-oauth-code-url`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n\r\n//Followers and Following Services\r\nexport const followService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/follow`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const checkIsFollowingService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/is-following`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getFollowersService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-followers`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getFollowingService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-followings`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const unFollowService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/unfollow`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n//Challenges Services\r\nexport const createChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/create-challenge`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const cancelChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/cancel-challenge`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const acceptChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/accept-challenge`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const rejectChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/reject-challenge`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const modifyChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/modify-challenge`,\r\n    body\r\n  );\r\n};\r\n\r\nexport const getChallengeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/get-challenges`,\r\n    body\r\n  );\r\n};\r\n\r\n\r\n//Madden Support APIS\r\n\r\nexport const submitEventResultService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/user-attestation`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const submitEvidenceService = async (body) => {\r\n  return await formDataAxiosService.post(\r\n    `authenticated/submit-winning-proof`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const getDisputesService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/get-conflicted-events`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const resolveDisputeService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/winner-attestation`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const addPSNTagService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/link-network`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const getBannedPlayersService = async () => {\r\n  return await nodeAxiosWithCredentials.get(\r\n    `admin/get-banned-users`,\r\n  );\r\n}\r\n\r\nexport const unbanPlayerService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/unban-user`,\r\n    body\r\n  );\r\n}\r\n\r\n\r\n\r\nexport const sendSubscriptionOfServiceWorkerService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `authenticated/register-subscription`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const claimNetworkService = async (body) => {\r\n  return await formDataAxiosService.post(\r\n    `authenticated/claim-network-account`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const getNetworkClaimsService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/get-network-account-claim`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const approveNetworkClaimService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/approve-network-account-claim`,\r\n    body\r\n  );\r\n}\r\n\r\nexport const rejectNetworkClaimService = async (body) => {\r\n  return await nodeAxiosWithCredentials.post(\r\n    `admin/reject-network-account-claim`,\r\n    body\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}