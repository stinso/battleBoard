{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\gameInfo\\\\HowToPlay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {},\n  paper: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 30,\n    paddingRight: 30\n  },\n  typo: {\n    marginBottom: 10\n  }\n}));\n\nconst HowToPlay = ({\n  className\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Follow the help page on linking gaming networks to ensure that your COD stats are getting synced with the linked networks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Enroll in the event, preferably in advance, with one of your linked gaming networks. You must maintain sufficient Chain Network balance and have it approved 30 minutes before the event starts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Once the event starts, join a Warzone match and try to score as many kills as you can.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- If you die in a game, you are allowed to join another match.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.typo,\n      color: \"textPrimary\",\n      variant: \"body1\",\n      children: \"- Results are declared soon after the event ends and can be seen in your event history.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HowToPlay, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HowToPlay;\nHowToPlay.propTypes = {\n  className: PropTypes.string\n};\nexport default HowToPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"HowToPlay\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/gameInfo/HowToPlay.js"],"names":["React","PropTypes","Box","Grid","Paper","Typography","makeStyles","useStyles","root","paper","paddingTop","paddingBottom","paddingLeft","paddingRight","typo","marginBottom","HowToPlay","className","classes","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,mBANP;;AASA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AAClCE,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,WAAW,EAAE,EAHR;AAILC,IAAAA,YAAY,EAAE;AAJT,GAF2B;AAQlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV;AAR4B,CAAP,CAAD,CAA5B;;AAaA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEW,OAAO,CAACT,KAA1B;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,SAAS,EAAES,OAAO,CAACJ,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEI,OAAO,CAACJ,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEI,OAAO,CAACJ,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAsBE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEI,OAAO,CAACJ,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEI,OAAO,CAACJ,IADrB;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA1CD;;GAAME,S;UACYT,S;;;KADZS,S;AA4CNA,SAAS,CAACG,SAAV,GAAsB;AACpBF,EAAAA,SAAS,EAAEhB,SAAS,CAACmB;AADD,CAAtB;AAIA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  paper: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingLeft: 30,\r\n    paddingRight: 30\r\n  },\r\n  typo: {\r\n    marginBottom: 10\r\n  }\r\n}));\r\n\r\nconst HowToPlay = ({ className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography \r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Follow the help page on linking gaming networks to ensure that your COD stats are getting synced with the linked networks.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Enroll in the event, preferably in advance, with one of your linked gaming networks. You must maintain sufficient Chain Network balance and have it approved 30 minutes before the event starts.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Once the event starts, join a Warzone match and try to score as many kills as you can.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - If you die in a game, you are allowed to join another match.\r\n      </Typography>\r\n      <Typography\r\n        className={classes.typo}\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        - Results are declared soon after the event ends and can be seen in your event history.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nHowToPlay.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default HowToPlay;\r\n"]},"metadata":{},"sourceType":"module"}