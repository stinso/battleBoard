{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\components\\\\Example.js\";\nimport React from 'react';\nimport Carousel from \"react-material-ui-carousel\";\nimport autoBind from \"auto-bind\";\nimport '../style/Example.scss';\nimport { Card, CardContent, CardMedia, Typography, Grid, Button, Checkbox, FormControlLabel, Radio, RadioGroup, FormLabel, Slider, IconButton } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  Name: \"Apex\",\n  Image: \"https://source.unsplash.com/featured/?macbook\"\n}, {\n  Name: \"Fifa\",\n  Image: \"https://source.unsplash.com/featured/?macbook\"\n}, {\n  Name: \"Fortnite\",\n  Image: \"https://source.unsplash.com/featured/?iphone\"\n}];\n\nclass BannerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoPlay: false,\n      animation: \"fade\",\n      indicators: true,\n      timeout: 500,\n      navButtonsAlwaysVisible: false,\n      navButtonsAlwaysInvisible: false,\n      cycleNavigation: true\n    };\n    autoBind(this);\n  }\n\n  toggleAutoPlay() {\n    this.setState({\n      autoPlay: !this.state.autoPlay\n    });\n  }\n\n  toggleIndicators() {\n    this.setState({\n      indicators: !this.state.indicators\n    });\n  }\n\n  toggleNavButtonsAlwaysVisible() {\n    this.setState({\n      navButtonsAlwaysVisible: !this.state.navButtonsAlwaysVisible\n    });\n  }\n\n  toggleNavButtonsAlwaysInvisible() {\n    this.setState({\n      navButtonsAlwaysInvisible: !this.state.navButtonsAlwaysInvisible\n    });\n  }\n\n  toggleCycleNavigation() {\n    this.setState({\n      cycleNavigation: !this.state.cycleNavigation\n    });\n  }\n\n  changeAnimation(event) {\n    this.setState({\n      animation: event.target.value\n    });\n  }\n\n  changeTimeout(event, value) {\n    this.setState({\n      timeout: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Carousel, {\n      className: \"Example\",\n      autoPlay: this.state.autoPlay,\n      animation: this.state.animation,\n      indicators: this.state.indicators,\n      timeout: this.state.timeout,\n      cycleNavigation: this.state.cycleNavigation,\n      navButtonsAlwaysVisible: this.state.navButtonsAlwaysVisible,\n      navButtonsAlwaysInvisible: this.state.navButtonsAlwaysInvisible,\n      next: (now, previous) => console.log(`Next User Callback: Now displaying child${now}. Previously displayed child${previous}`),\n      prev: (now, previous) => console.log(`Prev User Callback: Now displaying child${now}. Previously displayed child${previous}`),\n      onChange: (now, previous) => console.log(`OnChange User Callback: Now displaying child${now}. Previously displayed child${previous}`) // fullHeightHover={false}\n      // navButtonsProps={{style: {backgroundColor: 'cornflowerblue', borderRadius: 0}}}\n      // navButtonsWrapperProps={{style: {bottom: '0', top: 'unset', }}}\n      // indicatorContainerProps={{style: {margin: \"20px\"}}}\n      // NextIcon='next'\n      ,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        raised: true,\n        className: \"Banner\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          className: \"BannerGrid\",\n          children: items.map(item => {\n            console.log(item);\n\n            /*#__PURE__*/\n            _jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: \"Media\",\n                image: item.Image,\n                title: item.Name,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: \"MediaCaption\",\n                  children: item.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)\n            }, item.Name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default BannerExample;","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/components/Example.js"],"names":["React","Carousel","autoBind","Card","CardContent","CardMedia","Typography","Grid","Button","Checkbox","FormControlLabel","Radio","RadioGroup","FormLabel","Slider","IconButton","items","Name","Image","BannerExample","Component","constructor","props","state","autoPlay","animation","indicators","timeout","navButtonsAlwaysVisible","navButtonsAlwaysInvisible","cycleNavigation","toggleAutoPlay","setState","toggleIndicators","toggleNavButtonsAlwaysVisible","toggleNavButtonsAlwaysInvisible","toggleCycleNavigation","changeAnimation","event","target","value","changeTimeout","render","now","previous","console","log","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport autoBind from \"auto-bind\"\r\nimport '../style/Example.scss';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    FormLabel,\r\n    Slider,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst items = [\r\n    {\r\n        Name: \"Apex\",\r\n        Image: \"https://source.unsplash.com/featured/?macbook\"\r\n    },\r\n    {\r\n        Name: \"Fifa\",\r\n        Image: \"https://source.unsplash.com/featured/?macbook\"\r\n    },\r\n    {\r\n        Name: \"Fortnite\",\r\n        Image: \"https://source.unsplash.com/featured/?iphone\"\r\n    }\r\n]\r\n\r\nclass BannerExample extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: false,\r\n            animation: \"fade\",\r\n            indicators: true,\r\n            timeout: 500,\r\n            navButtonsAlwaysVisible: false,\r\n            navButtonsAlwaysInvisible: false,\r\n            cycleNavigation: true\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay() {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators() {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysVisible() {\r\n        this.setState({\r\n            navButtonsAlwaysVisible: !this.state.navButtonsAlwaysVisible\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysInvisible() {\r\n        this.setState({\r\n            navButtonsAlwaysInvisible: !this.state.navButtonsAlwaysInvisible\r\n        })\r\n    }\r\n\r\n    toggleCycleNavigation() {\r\n        this.setState({\r\n            cycleNavigation: !this.state.cycleNavigation\r\n        })\r\n    }\r\n\r\n    changeAnimation(event) {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    changeTimeout(event, value) {\r\n        this.setState({\r\n            timeout: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Carousel\r\n                    className=\"Example\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    animation={this.state.animation}\r\n                    indicators={this.state.indicators}\r\n                    timeout={this.state.timeout}\r\n                    cycleNavigation={this.state.cycleNavigation}\r\n                    navButtonsAlwaysVisible={this.state.navButtonsAlwaysVisible}\r\n                    navButtonsAlwaysInvisible={this.state.navButtonsAlwaysInvisible}\r\n                    next={(now, previous) => console.log(`Next User Callback: Now displaying child${now}. Previously displayed child${previous}`)}\r\n                    prev={(now, previous) => console.log(`Prev User Callback: Now displaying child${now}. Previously displayed child${previous}`)}\r\n                    onChange={(now, previous) => console.log(`OnChange User Callback: Now displaying child${now}. Previously displayed child${previous}`)}\r\n                    // fullHeightHover={false}\r\n                    // navButtonsProps={{style: {backgroundColor: 'cornflowerblue', borderRadius: 0}}}\r\n                    // navButtonsWrapperProps={{style: {bottom: '0', top: 'unset', }}}\r\n                    // indicatorContainerProps={{style: {margin: \"20px\"}}}\r\n                    // NextIcon='next'\r\n                >\r\n                    <Card raised className=\"Banner\">\r\n                        <Grid container spacing={3} className=\"BannerGrid\">\r\n                    {\r\n                        items.map((item) => {\r\n                                    console.log(item);\r\n                                    <Grid item xs={4} key={item.Name}>\r\n                                        <CardMedia\r\n                                            className=\"Media\"\r\n                                            image={item.Image}\r\n                                            title={item.Name}\r\n                                        >\r\n                                            <Typography className=\"MediaCaption\">\r\n                                                {item.Name}\r\n                                            </Typography>\r\n                                        </CardMedia>\r\n                                    </Grid>\r\n                                \r\n                        })\r\n                    }\r\n                        </Grid>\r\n                    </Card>\r\n                    {/* <FormLabel component=\"legend\">Options</FormLabel>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\"\r\n                            color=\"primary\" />\r\n                    }\r\n                    label=\"Auto-play\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\"\r\n                            color=\"primary\" />\r\n                    }\r\n                    label=\"Indicators\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysVisible} checked={this.state.navButtonsAlwaysVisible} value=\"NavButtonsAlwaysVisible\" color=\"primary\" />\r\n                    }\r\n                    label=\"NavButtonsAlwaysVisible\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysInvisible} checked={this.state.navButtonsAlwaysInvisible} value=\"NavButtonsAlwaysInvisible\" color=\"primary\" />\r\n                    }\r\n                    label=\"NavButtonsAlwaysInvisible\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleCycleNavigation} checked={this.state.cycleNavigation} value=\"CycleNavigation\" color=\"primary\" />\r\n                    }\r\n                    label=\"CycleNavigation\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row\r\n                            style={{ marginLeft: \"10px\" }}>\r\n                            <FormControlLabel value=\"fade\" control={<Radio color=\"primary\" />} label=\"Fade\" />\r\n                            <FormControlLabel value=\"slide\" control={<Radio color=\"primary\" />} label=\"Slide\" />\r\n                        </RadioGroup>\r\n                    }\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <div style={{ width: 300 }}>\r\n                            <Typography id=\"discrete-slider\" gutterBottom>\r\n                                Animation Duration (Timeout) in ms\r\n                            </Typography>\r\n                            <Slider\r\n                                defaultValue={500}\r\n                                getAriaValueText={() => `${this.state.timeout}ms`}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={100}\r\n                                marks\r\n                                min={100}\r\n                                max={2000}\r\n                                onChange={this.changeTimeout}\r\n                            />\r\n                        </div>\r\n                    }\r\n                /> */}\r\n                </Carousel>\r\n\r\n\r\n                \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BannerExample;\r\n"]},"metadata":{},"sourceType":"module"}