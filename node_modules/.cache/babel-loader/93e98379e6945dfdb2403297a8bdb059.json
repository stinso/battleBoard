{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { axios } from 'src/utils/axiosHook';\nconst initialState = {\n  address: \"\",\n  loggedIn: false,\n  hasAdminRole: false,\n  stake: 0,\n  rewards: 0,\n  accumulatedRewards: 0\n};\nconst slice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    login(state, action) {\n      const {\n        address = \"\",\n        stake = 0,\n        rewards = 0,\n        hasAdminRole = false,\n        accumulatedRewards = 0\n      } = action.payload;\n      state.loggedIn = true;\n      state.hasAdminRole = hasAdminRole;\n      state.address = address;\n      state.stake = stake;\n      state.rewards = rewards;\n      state.accumulatedRewards = accumulatedRewards;\n    },\n\n    logout(state, action) {\n      state.loggedIn = false;\n      state.hasAdminRole = false;\n      state.address = \"\";\n      state.stake = 0;\n      state.rewards = 0;\n      state.accumulatedRewards = 0;\n    }\n\n  }\n});\nexport const reducer = slice.reducer;\nexport const logout = () => async dispatch => {\n  dispatch(slice.actions.logout());\n};\nexport const login = address => async dispatch => {\n  axios.get(`/accounts/${address}`).then(function (response) {\n    // handle success\n    dispatch(slice.actions.login(response.data));\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/slices/account.js"],"names":["createSlice","axios","initialState","address","loggedIn","hasAdminRole","stake","rewards","accumulatedRewards","slice","name","reducers","login","state","action","payload","logout","reducer","dispatch","actions","get","then","response","data","catch","error","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,KAAK,EAAE,CAJY;AAKnBC,EAAAA,OAAO,EAAE,CALU;AAMnBC,EAAAA,kBAAkB,EAAE;AAND,CAArB;AASA,MAAMC,KAAK,GAAGT,WAAW,CAAC;AACxBU,EAAAA,IAAI,EAAE,SADkB;AAExBR,EAAAA,YAFwB;AAGxBS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnB,YAAM;AAAEX,QAAAA,OAAO,GAAG,EAAZ;AAAgBG,QAAAA,KAAK,GAAG,CAAxB;AAA2BC,QAAAA,OAAO,GAAG,CAArC;AAAwCF,QAAAA,YAAY,GAAG,KAAvD;AAA8DG,QAAAA,kBAAkB,GAAG;AAAnF,UAAyFM,MAAM,CAACC,OAAtG;AACAF,MAAAA,KAAK,CAACT,QAAN,GAAiB,IAAjB;AACAS,MAAAA,KAAK,CAACR,YAAN,GAAqBA,YAArB;AACAQ,MAAAA,KAAK,CAACV,OAAN,GAAgBA,OAAhB;AACAU,MAAAA,KAAK,CAACP,KAAN,GAAcA,KAAd;AACAO,MAAAA,KAAK,CAACN,OAAN,GAAgBA,OAAhB;AACAM,MAAAA,KAAK,CAACL,kBAAN,GAA2BA,kBAA3B;AACD,KATO;;AAURQ,IAAAA,MAAM,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACpBD,MAAAA,KAAK,CAACT,QAAN,GAAiB,KAAjB;AACAS,MAAAA,KAAK,CAACR,YAAN,GAAqB,KAArB;AACAQ,MAAAA,KAAK,CAACV,OAAN,GAAgB,EAAhB;AACAU,MAAAA,KAAK,CAACP,KAAN,GAAc,CAAd;AACAO,MAAAA,KAAK,CAACN,OAAN,GAAgB,CAAhB;AACAM,MAAAA,KAAK,CAACL,kBAAN,GAA2B,CAA3B;AACD;;AAjBO;AAHc,CAAD,CAAzB;AAyBA,OAAO,MAAMS,OAAO,GAAGR,KAAK,CAACQ,OAAtB;AAEP,OAAO,MAAMD,MAAM,GAAG,MAAM,MAAOE,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACT,KAAK,CAACU,OAAN,CAAcH,MAAd,EAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMJ,KAAK,GAAIT,OAAD,IAAa,MAAOe,QAAP,IAAoB;AACpDjB,EAAAA,KAAK,CAACmB,GAAN,CAAW,aAAYjB,OAAQ,EAA/B,EACCkB,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACAJ,IAAAA,QAAQ,CAACT,KAAK,CAACU,OAAN,CAAcP,KAAd,CAAoBU,QAAQ,CAACC,IAA7B,CAAD,CAAR;AACD,GAJD,EAKCC,KALD,CAKO,UAAUC,KAAV,EAAiB;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GARD;AASD,CAVM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { axios } from 'src/utils/axiosHook';\r\n\r\nconst initialState = {\r\n  address: \"\",\r\n  loggedIn: false,\r\n  hasAdminRole: false,\r\n  stake: 0,\r\n  rewards: 0,\r\n  accumulatedRewards: 0\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      const { address = \"\", stake = 0, rewards = 0, hasAdminRole = false, accumulatedRewards = 0 } = action.payload;\r\n      state.loggedIn = true;\r\n      state.hasAdminRole = hasAdminRole;\r\n      state.address = address;\r\n      state.stake = stake;\r\n      state.rewards = rewards;\r\n      state.accumulatedRewards = accumulatedRewards;\r\n    },\r\n    logout(state, action) {\r\n      state.loggedIn = false;\r\n      state.hasAdminRole = false;\r\n      state.address = \"\";\r\n      state.stake = 0;\r\n      state.rewards = 0;\r\n      state.accumulatedRewards = 0;\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const reducer = slice.reducer;\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(slice.actions.logout());\r\n}\r\n\r\nexport const login = (address) => async (dispatch) => {\r\n  axios.get(`/accounts/${address}`)\r\n  .then(function (response) {\r\n    // handle success\r\n    dispatch(slice.actions.login(response.data));\r\n  })\r\n  .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}