{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\challenges\\\\Challenges.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { THEMES } from 'src/constants';\nimport { Avatar, Box, Button, Card, CardMedia, Container, Divider, Grid, Link, Tab, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Tabs, Typography, Paper, useTheme, useMediaQuery, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Saira', sans-serif\";\nconst challenges = [{\n  id: 1,\n  opponent: \"mukki@chaingames.io\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"27th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 5,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Won\"\n}, {\n  id: 2,\n  opponent: \"mukki@chaingames.io\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"24th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 25,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Won\"\n}, {\n  id: 3,\n  opponent: \"mukki@chaingames.io\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"21th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 1,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Lost\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingBottom: 200,\n    minHeight: '100%',\n    [theme.breakpoints.down('md')]: {\n      paddingTop: 0,\n      paddingBottom: 60\n    },\n    margin: 0\n  }\n}));\n\nconst Challenges = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [currentTab, setCurrentTab] = useState('sent');\n  const tabs = [{\n    value: 'sent',\n    label: 'Sent'\n  }, {\n    value: 'received',\n    label: 'Received'\n  }, {\n    value: 'accepted',\n    label: 'Accepted'\n  }, {\n    value: 'completed',\n    label: 'Completed'\n  }];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        color: \"textPrimary\",\n        children: \"My Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 1,\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              onChange: handleTabsChange,\n              scrollButtons: \"auto\",\n              textColor: \"secondary\",\n              value: currentTab,\n              variant: \"scrollable\",\n              children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n                label: tab.label,\n                value: tab.value\n              }, tab.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              minWidth: 300,\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Opponent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game Format\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Start Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Duration\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Bet Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Event Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Result\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: challenges.map(entry => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      spacing: 0,\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        className: classes.imageCell,\n                        align: \"center\",\n                        padding: \"none\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: classes.rowImage,\n                          src: entry.opponent\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.game\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.gameFormat\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.startTime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.duration\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.betAmount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          color: \"secondary\",\n                          to: entry.eventDetails,\n                          children: \"Event\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          color: entry.result == 'Won' ? 'error' : 'error',\n                          variant: \"body5\",\n                          children: entry.result\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 27\n                      }, this)]\n                    }, entry.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                component: \"div\",\n                count: 12,\n                labelRowsPerPage: 'Rows per page'\n                /* onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange} */\n                ,\n                page: 0,\n                rowsPerPage: 10,\n                rowsPerPageOptions: [5, 10, 25]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Challenges, \"5XLMH0Ea8IZIOIFs9mFsoLA+ig8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Challenges;\nChallenges.propTypes = {\n  className: PropTypes.string\n};\nexport default Challenges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challenges\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/challenges/Challenges.js"],"names":["React","useEffect","useState","useCallback","NavLink","RouterLink","PropTypes","clsx","THEMES","Avatar","Box","Button","Card","CardMedia","Container","Divider","Grid","Link","Tab","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Tabs","Typography","Paper","useTheme","useMediaQuery","makeStyles","font","challenges","id","opponent","game","gameFormat","startTime","duration","betAmount","status","eventDetails","result","useStyles","theme","root","backgroundColor","palette","background","dark","paddingBottom","minHeight","breakpoints","down","paddingTop","margin","Challenges","className","rest","classes","mobileDevice","currentTab","setCurrentTab","tabs","value","label","handleTabsChange","event","map","tab","entry","imageCell","rowImage","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { THEMES } from 'src/constants';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tabs,\r\n  Typography,\r\n  Paper,\r\n  useTheme,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst font = \"'Saira', sans-serif\";\r\n\r\nconst challenges = [\r\n  {\r\n    id: 1,\r\n    opponent: \"mukki@chaingames.io\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"27th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 5,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Won\"\r\n  },\r\n  {\r\n    id: 2,\r\n    opponent: \"mukki@chaingames.io\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"24th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 25,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Won\"\r\n  },\r\n  {\r\n    id: 3,\r\n    opponent: \"mukki@chaingames.io\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"21th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 1,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Lost\"\r\n  }\r\n]\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: 200,\r\n    minHeight: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 0,\r\n      paddingBottom: 60\r\n    },\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nconst Challenges = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [currentTab, setCurrentTab] = useState('sent');\r\n\r\n  const tabs = [\r\n    { value: 'sent', label: 'Sent' },\r\n    { value: 'received', label: 'Received' },\r\n    { value: 'accepted', label: 'Accepted' },\r\n    { value: 'completed', label: 'Completed' }\r\n  ];\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    > \r\n      <Container maxWidth=\"lg\">\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          My Challenges\r\n        </Typography>\r\n        <Box mt={3}>\r\n          <Paper>\r\n            <Box mt={1} mb={3}>\r\n              <Tabs\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                textColor=\"secondary\"\r\n                value={currentTab}\r\n                variant=\"scrollable\"\r\n              >\r\n                {tabs.map((tab) => (\r\n                  <Tab\r\n                    key={tab.value}\r\n                    label={tab.label}\r\n                    value={tab.value}\r\n                  />\r\n                ))}\r\n              </Tabs>\r\n              <Divider />\r\n            </Box>\r\n            <Card>\r\n              <Box minWidth={300} >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow >\r\n                      <TableCell>\r\n                        Opponent\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Game\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Game Format\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Start Time\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Duration\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Bet Amount\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Status\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Event Details\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Result\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {challenges.map((entry) => {\r\n                      return (\r\n                        <TableRow\r\n                          spacing={0}\r\n                          hover\r\n                          key={entry.id}\r\n                        >\r\n                          <TableCell className={classes.imageCell} align='center' padding='none'>\r\n                              <img className={classes.rowImage}\r\n                                src={entry.opponent}\r\n                              />\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.game}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.gameFormat}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.startTime}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.duration}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.betAmount}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.status}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Link\r\n                              color=\"secondary\"\r\n                              to={entry.eventDetails}\r\n                            >\r\n                              Event\r\n                            </Link>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography\r\n                              color={entry.result == 'Won' ? 'error' : 'error'}\r\n                              variant=\"body5\"\r\n                            >\r\n                              {entry.result}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={12}\r\n                  labelRowsPerPage={'Rows per page'}\r\n                  /* onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange} */\r\n                  page={0}\r\n                  rowsPerPage={10}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n              </Box>\r\n            </Card>\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nChallenges.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Challenges;\r\n"]},"metadata":{},"sourceType":"module"}