{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\upcomingEvents\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { THEMES } from 'src/constants';\nimport { Avatar, Box, Button, Card, CardMedia, Container, Divider, Grid, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, Paper, useTheme, useMediaQuery, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Saira', sans-serif\";\nconst events = [{\n  id: \"1\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  participants: \"12\",\n  startTime: \"00:00:04:23\"\n}, {\n  id: \"2\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  participants: \"12\",\n  startTime: \"00:00:05:23\"\n}, {\n  id: \"3\",\n  game: \"COD - MW\",\n  eventName: \"Free MW\",\n  format: \"Warzone - Max Kills\",\n  entry: \"Free\",\n  status: \"Waiting\",\n  participants: \"12\",\n  startTime: \"00:01:04:23\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingBottom: 200,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.down('md')]: {\n      paddingTop: 0,\n      paddingBottom: 60\n    },\n    margin: 0\n  }\n}));\n\nconst Events = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        color: \"textPrimary\",\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              minWidth: 300,\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Event Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Game Format\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Entry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Participants\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Start Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: events.map(entry => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      spacing: 0,\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.game\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.eventName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.format\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.entry\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.participants\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: entry.startTime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this)]\n                    }, entry.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                component: \"div\",\n                count: 3,\n                labelRowsPerPage: 'Rows per page'\n                /* onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange} */\n                ,\n                page: 0,\n                rowsPerPage: 10,\n                rowsPerPageOptions: [5, 10, 25]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Events, \"uaqNjsTlKYawbSgCc3vYxcTKPks=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Events;\nEvents.propTypes = {\n  className: PropTypes.string\n};\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/upcomingEvents/Events.js"],"names":["React","useEffect","useState","useCallback","NavLink","RouterLink","PropTypes","clsx","THEMES","Avatar","Box","Button","Card","CardMedia","Container","Divider","Grid","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","Paper","useTheme","useMediaQuery","makeStyles","font","events","id","game","eventName","format","entry","status","participants","startTime","useStyles","theme","root","backgroundColor","palette","background","dark","paddingBottom","minHeight","paddingTop","spacing","breakpoints","down","margin","Events","className","rest","classes","mobileDevice","map","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,IARF,EASEC,KATF,EAUEC,SAVF,EAWEC,SAXF,EAYEC,SAZF,EAaEC,eAbF,EAcEC,QAdF,EAeEC,UAfF,EAgBEC,KAhBF,EAiBEC,QAjBF,EAkBEC,aAlBF,EAmBEC,UAnBF,QAoBO,mBApBP;;AAsBA,MAAMC,IAAI,GAAG,qBAAb;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,MAAM,EAAE,qBAJV;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,MAAM,EAAE,SANV;AAOEC,EAAAA,YAAY,EAAE,IAPhB;AAQEC,EAAAA,SAAS,EAAE;AARb,CADa,EAWb;AACEP,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,MAAM,EAAE,qBAJV;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,MAAM,EAAE,SANV;AAOEC,EAAAA,YAAY,EAAE,IAPhB;AAQEC,EAAAA,SAAS,EAAE;AARb,CAXa,EAqBb;AACEP,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,MAAM,EAAE,qBAJV;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,MAAM,EAAE,SANV;AAOEC,EAAAA,YAAY,EAAE,IAPhB;AAQEC,EAAAA,SAAS,EAAE;AARb,CArBa,CAAf;AAmCA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,IADtC;AAEJC,IAAAA,aAAa,EAAE,GAFX;AAGJC,IAAAA,SAAS,EAAE,MAHP;AAIJC,IAAAA,UAAU,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CAJR;AAKJ,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BH,MAAAA,UAAU,EAAE,CADkB;AAE9BF,MAAAA,aAAa,EAAE;AAFe,KAL5B;AASJM,IAAAA,MAAM,EAAE;AATJ;AADiC,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAM+B,YAAY,GAAG9B,aAAa,CAACa,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAlC;AAGA,sBACE;AACE,IAAA,SAAS,EAAE3C,IAAI,CAACgD,OAAO,CAACf,IAAT,EAAea,SAAf,CADjB;AAAA,OAEMC,IAFN;AAAA,2BAIE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,IADV;AAEE,QAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,KAAD;AAAA,iCACF,QAAC,IAAD;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,QAAQ,EAAE,GAAf;AAAA,sCACE,QAAC,KAAD;AAAA,wCACE,QAAC,SAAD;AAAA,yCACE,QAAC,QAAD;AAAA,4CACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,eAaE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbF,eAgBE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAhBF,eAmBE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eA0BE,QAAC,SAAD;AAAA,4BACGzB,MAAM,CAAC4B,GAAP,CAAYvB,KAAD,IAAW;AACrB,wCACE,QAAC,QAAD;AACE,sBAAA,OAAO,EAAE,CADX;AAEE,sBAAA,KAAK,MAFP;AAAA,8CAKE,QAAC,SAAD;AAAA,kCACGA,KAAK,CAACH;AADT;AAAA;AAAA;AAAA;AAAA,8BALF,eAQE,QAAC,SAAD;AAAA,kCACGG,KAAK,CAACF;AADT;AAAA;AAAA;AAAA;AAAA,8BARF,eAWE,QAAC,SAAD;AAAA,kCACGE,KAAK,CAACD;AADT;AAAA;AAAA;AAAA;AAAA,8BAXF,eAcE,QAAC,SAAD;AAAA,kCACGC,KAAK,CAACA;AADT;AAAA;AAAA;AAAA;AAAA,8BAdF,eAiBE,QAAC,SAAD;AAAA,kCACGA,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA,8BAjBF,eAoBE,QAAC,SAAD;AAAA,kCACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,8BApBF,eAuBE,QAAC,SAAD;AAAA,kCACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,8BAvBF;AAAA,uBAGOH,KAAK,CAACJ,EAHb;AAAA;AAAA;AAAA;AAAA,4BADF;AA6BD,mBA9BA;AADH;AAAA;AAAA;AAAA;AAAA,wBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA6DE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,KADZ;AAEE,gBAAA,KAAK,EAAE,CAFT;AAGE,gBAAA,gBAAgB,EAAE;AAClB;AAChB;AALc;AAME,gBAAA,IAAI,EAAE,CANR;AAOE,gBAAA,WAAW,EAAE,EAPf;AAQE,gBAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AARtB;AAAA;AAAA;AAAA;AAAA,sBA7DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD,CApGD;;GAAMsB,M;UACYd,S,EACFb,Q,EACOC,a;;;KAHjB0B,M;AAsGNA,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,SAAS,EAAE/C,SAAS,CAACqD;AADJ,CAAnB;AAIA,eAAeP,MAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { THEMES } from 'src/constants';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  Paper,\r\n  useTheme,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst font = \"'Saira', sans-serif\";\r\n\r\nconst events = [\r\n  {\r\n    id: \"1\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    participants: \"12\",\r\n    startTime: \"00:00:04:23\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    participants: \"12\",\r\n    startTime: \"00:00:05:23\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    game: \"COD - MW\",\r\n    eventName: \"Free MW\",\r\n    format: \"Warzone - Max Kills\",\r\n    entry: \"Free\",\r\n    status: \"Waiting\",\r\n    participants: \"12\",\r\n    startTime: \"00:01:04:23\"\r\n  },\r\n]\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: 200,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 0,\r\n      paddingBottom: 60\r\n    },\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nconst Events = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Upcoming Events\r\n        </Typography>\r\n        <Box mt={3}>\r\n          <Paper>\r\n        <Card>\r\n            <Box minWidth={300} >\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow >\r\n                    <TableCell>\r\n                      Game\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Event Name\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Game Format\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Entry\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Status\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Participants\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Start Time\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {events.map((entry) => {\r\n                    return (\r\n                      <TableRow\r\n                        spacing={0}\r\n                        hover\r\n                        key={entry.id}\r\n                      >\r\n                        <TableCell>\r\n                          {entry.game}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.eventName}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.format}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.entry}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.status}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.participants}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {entry.startTime}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={3}\r\n                labelRowsPerPage={'Rows per page'}\r\n                /* onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleLimitChange} */\r\n                page={0}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n              />\r\n            </Box>\r\n          \r\n        </Card>\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nEvents.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Events;\r\n"]},"metadata":{},"sourceType":"module"}