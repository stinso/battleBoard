{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\challenges\\\\Challenges.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { THEMES } from 'src/constants';\nimport { Avatar, Box, Card, Container, Divider, Link, Tab, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Tabs, Typography, Paper, useTheme, useMediaQuery, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst font = \"'Saira', sans-serif\";\nconst challenges = [{\n  id: 1,\n  opponentName: \"mukki@chaingames.io\",\n  opponentAvatar: \"/static/images/panda.png\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"27th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 5,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Won\"\n}, {\n  id: 2,\n  opponentName: \"mukki@chaingames.io\",\n  opponentAvatar: \"/static/images/panda.png\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"24th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 25,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Won\"\n}, {\n  id: 3,\n  opponentName: \"mukki@chaingames.io\",\n  opponentAvatar: \"/static/images/panda.png\",\n  game: \"Madden NFL 21\",\n  gameFormat: \"Max Score\",\n  startTime: \"21th Mar 21:00 CET\",\n  duration: \"30 Min\",\n  betAmount: 1,\n  status: \"Accepted\",\n  eventDetails: \"Event\",\n  result: \"Lost\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingBottom: 200,\n    minHeight: '100%',\n    [theme.breakpoints.down('md')]: {\n      paddingTop: 0,\n      paddingBottom: 60\n    },\n    margin: 0\n  },\n  resultWon: {\n    color: '#388e3c'\n  },\n  resultLost: {\n    color: '#f44336'\n  },\n  avatar: {\n    height: '32px',\n    width: '32px'\n  },\n  imageCell: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  }\n}));\n\nconst Challenges = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [currentTab, setCurrentTab] = useState('sent');\n  const tabs = [{\n    value: 'sent',\n    label: 'Sent'\n  }, {\n    value: 'received',\n    label: 'Received'\n  }, {\n    value: 'accepted',\n    label: 'Accepted'\n  }, {\n    value: 'completed',\n    label: 'Completed'\n  }];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        color: \"textPrimary\",\n        children: \"My Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            onChange: handleTabsChange,\n            scrollButtons: \"auto\",\n            textColor: \"secondary\",\n            value: currentTab,\n            variant: \"scrollable\",\n            children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n              label: tab.label,\n              value: tab.value\n            }, tab.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            minWidth: 300,\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Opponent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Game\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Game Format\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Start Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Bet Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Event Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: challenges.map(entry => {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    spacing: 0,\n                    hover: true,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      className: classes.imageCell,\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                          className: classes.avatar,\n                          src: entry.opponentAvatar\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          marginLeft: 1,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            children: entry.opponentName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.game\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.gameFormat\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.startTime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.betAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: entry.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        color: \"secondary\",\n                        to: entry.eventDetails,\n                        children: \"Event\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: entry.result == 'Won' ? classes.resultWon : classes.resultLost,\n                        variant: \"body2\",\n                        children: entry.result\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 27\n                    }, this)]\n                  }, entry.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              component: \"div\",\n              count: 12,\n              labelRowsPerPage: 'Rows per page'\n              /* onChangePage={handlePageChange}\r\n              onChangeRowsPerPage={handleLimitChange} */\n              ,\n              page: 0,\n              rowsPerPage: 10,\n              rowsPerPageOptions: [5, 10, 25]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Challenges, \"5XLMH0Ea8IZIOIFs9mFsoLA+ig8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Challenges;\nChallenges.propTypes = {\n  className: PropTypes.string\n};\nexport default Challenges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challenges\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/challenges/Challenges.js"],"names":["React","useEffect","useState","useCallback","NavLink","RouterLink","PropTypes","clsx","THEMES","Avatar","Box","Card","Container","Divider","Link","Tab","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Tabs","Typography","Paper","useTheme","useMediaQuery","makeStyles","font","challenges","id","opponentName","opponentAvatar","game","gameFormat","startTime","duration","betAmount","status","eventDetails","result","useStyles","theme","root","backgroundColor","palette","background","dark","paddingBottom","minHeight","breakpoints","down","paddingTop","margin","resultWon","color","resultLost","avatar","height","width","imageCell","spacing","Challenges","className","rest","classes","mobileDevice","currentTab","setCurrentTab","tabs","value","label","handleTabsChange","event","map","tab","entry","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { THEMES } from 'src/constants';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Link,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tabs,\r\n  Typography,\r\n  Paper,\r\n  useTheme,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst font = \"'Saira', sans-serif\";\r\n\r\nconst challenges = [\r\n  {\r\n    id: 1,\r\n    opponentName: \"mukki@chaingames.io\",\r\n    opponentAvatar: \"/static/images/panda.png\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"27th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 5,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Won\"\r\n  },\r\n  {\r\n    id: 2,\r\n    opponentName: \"mukki@chaingames.io\",\r\n    opponentAvatar: \"/static/images/panda.png\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"24th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 25,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Won\"\r\n  },\r\n  {\r\n    id: 3,\r\n    opponentName: \"mukki@chaingames.io\",\r\n    opponentAvatar: \"/static/images/panda.png\",\r\n    game: \"Madden NFL 21\",\r\n    gameFormat: \"Max Score\", \r\n    startTime: \"21th Mar 21:00 CET\",\r\n    duration: \"30 Min\",\r\n    betAmount: 1,\r\n    status: \"Accepted\",\r\n    eventDetails: \"Event\",\r\n    result: \"Lost\"\r\n  }\r\n]\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: 200,\r\n    minHeight: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 0,\r\n      paddingBottom: 60\r\n    },\r\n    margin: 0\r\n  },\r\n  resultWon: {\r\n    color: '#388e3c'\r\n  },\r\n  resultLost: {\r\n    color: '#f44336'\r\n  },\r\n  avatar: {\r\n    height: '32px',\r\n    width: '32px'\r\n  },\r\n  imageCell: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Challenges = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [currentTab, setCurrentTab] = useState('sent');\r\n\r\n  const tabs = [\r\n    { value: 'sent', label: 'Sent' },\r\n    { value: 'received', label: 'Received' },\r\n    { value: 'accepted', label: 'Accepted' },\r\n    { value: 'completed', label: 'Completed' }\r\n  ];\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    > \r\n      <Container maxWidth=\"lg\">\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          My Challenges\r\n        </Typography>\r\n        <Box mt={3}>\r\n            <Box mt={1} mb={3}>\r\n              <Tabs\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                textColor=\"secondary\"\r\n                value={currentTab}\r\n                variant=\"scrollable\"\r\n              >\r\n                {tabs.map((tab) => (\r\n                  <Tab\r\n                    key={tab.value}\r\n                    label={tab.label}\r\n                    value={tab.value}\r\n                  />\r\n                ))}\r\n              </Tabs>\r\n              <Divider />\r\n            </Box>\r\n            <Card>\r\n              <Box minWidth={300} >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow >\r\n                      <TableCell>\r\n                        Opponent\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Game\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Game Format\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Start Time\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Duration\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Bet Amount\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Status\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Event Details\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Result\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {challenges.map((entry) => {\r\n                      return (\r\n                        <TableRow\r\n                          spacing={0}\r\n                          hover\r\n                          key={entry.id}\r\n                        >\r\n                          <TableCell className={classes.imageCell}>\r\n                            <Box display=\"flex\" alignItems=\"center\">\r\n                              <Avatar className={classes.avatar} src={entry.opponentAvatar}/>\r\n                              <Box marginLeft={1}>\r\n                                <Typography variant=\"body2\">\r\n                                  {entry.opponentName}\r\n                                </Typography>\r\n                              </Box>\r\n                              \r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.game}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.gameFormat}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.startTime}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.duration}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.betAmount}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {entry.status}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Link\r\n                              color=\"secondary\"\r\n                              to={entry.eventDetails}\r\n                            >\r\n                              Event\r\n                            </Link>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography\r\n                              className={entry.result == 'Won' ? classes.resultWon : classes.resultLost}\r\n                              variant=\"body2\"\r\n                            >\r\n                              {entry.result}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  count={12}\r\n                  labelRowsPerPage={'Rows per page'}\r\n                  /* onChangePage={handlePageChange}\r\n                  onChangeRowsPerPage={handleLimitChange} */\r\n                  page={0}\r\n                  rowsPerPage={10}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n              </Box>\r\n            </Card>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nChallenges.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Challenges;\r\n"]},"metadata":{},"sourceType":"module"}