{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\contexts\\\\JWTAuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport SplashScreen from 'src/components/SplashScreen';\nimport axios from 'src/utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAuthState = {\n  isAuthenticated: false,\n  isInitialised: false,\n  user: null\n};\n\nconst isValidToken = accessToken => {\n  if (!accessToken) {\n    return false;\n  }\n\n  const decoded = jwtDecode(accessToken);\n  const currentTime = Date.now() / 1000;\n  return decoded.exp > currentTime;\n};\n\nconst setSession = accessToken => {\n  if (accessToken) {\n    localStorage.setItem('accessToken', accessToken);\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  } else {\n    localStorage.removeItem('accessToken');\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIALISE':\n      {\n        const {\n          isAuthenticated,\n          user\n        } = action.payload;\n        return { ...state,\n          isAuthenticated,\n          isInitialised: true,\n          user\n        };\n      }\n\n    case 'LOGIN':\n      {\n        const {\n          user\n        } = action.payload;\n        return { ...state,\n          isAuthenticated: true,\n          user\n        };\n      }\n\n    case 'LOGOUT':\n      {\n        return { ...state,\n          isAuthenticated: false,\n          user: null\n        };\n      }\n\n    case 'REGISTER':\n      {\n        const {\n          user\n        } = action.payload;\n        return { ...state,\n          isAuthenticated: true,\n          user\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};\n\nconst AuthContext = /*#__PURE__*/createContext({ ...initialAuthState,\n  method: 'JWT',\n  login: () => Promise.resolve(),\n  logout: () => {},\n  register: () => Promise.resolve()\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n\n  const login = async (email, password) => {\n    const response = await axios.post('/api/account/login', {\n      email,\n      password\n    });\n    const {\n      accessToken,\n      user\n    } = response.data;\n    setSession(accessToken);\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = () => {\n    setSession(null);\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  const register = async (email, name, password) => {\n    const response = await axios.post('/api/account/register', {\n      email,\n      name,\n      password\n    });\n    const {\n      accessToken,\n      user\n    } = response.data;\n    window.localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  useEffect(() => {\n    const initialise = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken && isValidToken(accessToken)) {\n          setSession(accessToken);\n          const response = await axios.get('/api/account/me');\n          const {\n            user\n          } = response.data;\n          dispatch({\n            type: 'INITIALISE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALISE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALISE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialise();\n  }, []);\n\n  if (!state.isInitialised) {\n    return /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      method: 'JWT',\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"//4mWrSOuqoEUUutHOK3gWkly1o=\");\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/contexts/JWTAuthContext.js"],"names":["React","createContext","useEffect","useReducer","jwtDecode","SplashScreen","axios","initialAuthState","isAuthenticated","isInitialised","user","isValidToken","accessToken","decoded","currentTime","Date","now","exp","setSession","localStorage","setItem","defaults","headers","common","Authorization","removeItem","reducer","state","action","type","payload","AuthContext","method","login","Promise","resolve","logout","register","AuthProvider","children","dispatch","email","password","response","post","data","name","window","initialise","getItem","get","err","console","error"],"mappings":"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","sourcesContent":["import React, {\r\n  createContext,\r\n  useEffect,\r\n  useReducer\r\n} from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport SplashScreen from 'src/components/SplashScreen';\r\nimport axios from 'src/utils/axios';\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n  isInitialised: false,\r\n  user: null\r\n};\r\n\r\nconst isValidToken = (accessToken) => {\r\n  if (!accessToken) {\r\n    return false;\r\n  }\r\n\r\n  const decoded = jwtDecode(accessToken);\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  return decoded.exp > currentTime;\r\n};\r\n\r\nconst setSession = (accessToken) => {\r\n  if (accessToken) {\r\n    localStorage.setItem('accessToken', accessToken);\r\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n  } else {\r\n    localStorage.removeItem('accessToken');\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INITIALISE': {\r\n      const { isAuthenticated, user } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        isAuthenticated,\r\n        isInitialised: true,\r\n        user\r\n      };\r\n    }\r\n    case 'LOGIN': {\r\n      const { user } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user\r\n      };\r\n    }\r\n    case 'LOGOUT': {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null\r\n      };\r\n    }\r\n    case 'REGISTER': {\r\n      const { user } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nconst AuthContext = createContext({\r\n  ...initialAuthState,\r\n  method: 'JWT',\r\n  login: () => Promise.resolve(),\r\n  logout: () => { },\r\n  register: () => Promise.resolve()\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('/api/account/login', { email, password });\r\n    const { accessToken, user } = response.data;\r\n\r\n    setSession(accessToken);\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: {\r\n        user\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setSession(null);\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const register = async (email, name, password) => {\r\n    const response = await axios.post('/api/account/register', {\r\n      email,\r\n      name,\r\n      password\r\n    });\r\n    const { accessToken, user } = response.data;\r\n\r\n    window.localStorage.setItem('accessToken', accessToken);\r\n\r\n    dispatch({\r\n      type: 'REGISTER',\r\n      payload: {\r\n        user\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialise = async () => {\r\n      try {\r\n        const accessToken = window.localStorage.getItem('accessToken');\r\n\r\n        if (accessToken && isValidToken(accessToken)) {\r\n          setSession(accessToken);\r\n\r\n          const response = await axios.get('/api/account/me');\r\n          const { user } = response.data;\r\n\r\n          dispatch({\r\n            type: 'INITIALISE',\r\n            payload: {\r\n              isAuthenticated: true,\r\n              user\r\n            }\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: 'INITIALISE',\r\n            payload: {\r\n              isAuthenticated: false,\r\n              user: null\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        dispatch({\r\n          type: 'INITIALISE',\r\n          payload: {\r\n            isAuthenticated: false,\r\n            user: null\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    initialise();\r\n  }, []);\r\n\r\n  if (!state.isInitialised) {\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        method: 'JWT',\r\n        login,\r\n        logout,\r\n        register\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}