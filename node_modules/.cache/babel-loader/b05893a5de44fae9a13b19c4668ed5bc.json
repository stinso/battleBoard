{"ast":null,"code":"import initialState from \"./state\";\nimport { SET_CHAIN_BALANCE_BOOL, SET_METAMASK, SET_ETH_BALANCE_BOOL, SET_ADDEES_NOT_STAKED, SET_CHAIN_BALANCE, SET_STAKING_VALUE, SET_EXISTING_ALLOWANCE, SET_TOAPPROVE_ALLOWANCE, SET_ERROR, SET_ERROR_WITH_MESSAGE, SET_CONNECTED_ADDRESS, SET_TOTAL_STAKE_LIMIT, SET_TOTAL_STAKE, SHOW_STAKE, STAKE_TX_HASH, SET_APPROVE_TX_HASH, SET_PREAUTH_LOADING, SET_IS_WITHDRAW_INITIATED, SET_STAKED_AMOUNT, SET_REWARD_VALUE, SET_WITHDRAW_INITIATED_DATE } from \"./actions\";\n\nconst stakeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_METAMASK:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          metamask: action.payload\n        }\n      };\n\n    case SET_CHAIN_BALANCE_BOOL:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          chainBalance: action.payload\n        }\n      };\n\n    case SET_ETH_BALANCE_BOOL:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          ethBalance: action.payload\n        }\n      };\n\n    case SET_ADDEES_NOT_STAKED:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          addressNotStaked: action.payload\n        }\n      };\n\n    case SET_CONNECTED_ADDRESS:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          connectedAddress: action.payload\n        }\n      };\n\n    case SET_IS_WITHDRAW_INITIATED:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          isWithDrawInitiated: action.payload\n        }\n      };\n\n    case SET_WITHDRAW_INITIATED_DATE:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          endDate: action.payload\n        }\n      };\n\n    case SET_STAKED_AMOUNT:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          stakedAmount: action.payload\n        }\n      };\n\n    case SET_REWARD_VALUE:\n      return { ...state,\n        prerequisites: { ...state.prerequisites,\n          rewardAmount: action.payload\n        }\n      };\n\n    case SET_CHAIN_BALANCE:\n      return { ...state,\n        staking: { ...state.staking,\n          chainBalance: action.payload\n        }\n      };\n\n    case SET_STAKING_VALUE:\n      return { ...state,\n        staking: { ...state.staking,\n          stakingValue: action.payload\n        }\n      };\n\n    case SET_TOTAL_STAKE_LIMIT:\n      return { ...state,\n        staking: { ...state.staking,\n          contractTotalStakeLimit: action.payload\n        }\n      };\n\n    case SET_TOTAL_STAKE:\n      return { ...state,\n        staking: { ...state.staking,\n          contractTotalStake: action.payload\n        }\n      };\n\n    case SHOW_STAKE:\n      return { ...state,\n        staking: { ...state.staking,\n          showStake: action.payload\n        }\n      };\n\n    case STAKE_TX_HASH:\n      return { ...state,\n        staking: { ...state.staking,\n          stakeTxHash: action.payload\n        }\n      };\n\n    case SET_EXISTING_ALLOWANCE:\n      return { ...state,\n        allowance: { ...state.allowance,\n          existing: action.payload\n        }\n      };\n\n    case SET_TOAPPROVE_ALLOWANCE:\n      return { ...state,\n        allowance: { ...state.allowance,\n          toApprove: action.payload\n        }\n      };\n\n    case SET_APPROVE_TX_HASH:\n      return { ...state,\n        allowance: { ...state.allowance,\n          approveTxHash: action.payload\n        }\n      };\n\n    case SET_ERROR:\n      return { ...state,\n        error: {\n          isError: action.payload,\n          errorMessage: \"Ooops, something happened\"\n        }\n      };\n\n    case SET_ERROR_WITH_MESSAGE:\n      return { ...state,\n        error: {\n          isError: true,\n          errorMessage: action.payload\n        }\n      };\n\n    case SET_PREAUTH_LOADING:\n      return { ...state,\n        ui: { ...state.ui,\n          preAuth: { ...state.ui.preAuth,\n            loading: action.payload\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stakeReducer;","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/context/StakingContract/reducer.jsx"],"names":["initialState","SET_CHAIN_BALANCE_BOOL","SET_METAMASK","SET_ETH_BALANCE_BOOL","SET_ADDEES_NOT_STAKED","SET_CHAIN_BALANCE","SET_STAKING_VALUE","SET_EXISTING_ALLOWANCE","SET_TOAPPROVE_ALLOWANCE","SET_ERROR","SET_ERROR_WITH_MESSAGE","SET_CONNECTED_ADDRESS","SET_TOTAL_STAKE_LIMIT","SET_TOTAL_STAKE","SHOW_STAKE","STAKE_TX_HASH","SET_APPROVE_TX_HASH","SET_PREAUTH_LOADING","SET_IS_WITHDRAW_INITIATED","SET_STAKED_AMOUNT","SET_REWARD_VALUE","SET_WITHDRAW_INITIATED_DATE","stakeReducer","state","action","type","prerequisites","metamask","payload","chainBalance","ethBalance","addressNotStaked","connectedAddress","isWithDrawInitiated","endDate","stakedAmount","rewardAmount","staking","stakingValue","contractTotalStakeLimit","contractTotalStake","showStake","stakeTxHash","allowance","existing","toApprove","approveTxHash","error","isError","errorMessage","ui","preAuth","loading"],"mappings":"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","sourcesContent":["import initialState from \"./state\";\r\nimport {\r\n  SET_CHAIN_BALANCE_BOOL,\r\n  SET_METAMASK,\r\n  SET_ETH_BALANCE_BOOL,\r\n  SET_ADDEES_NOT_STAKED,\r\n  SET_CHAIN_BALANCE,\r\n  SET_STAKING_VALUE,\r\n  SET_EXISTING_ALLOWANCE,\r\n  SET_TOAPPROVE_ALLOWANCE,\r\n  SET_ERROR,\r\n  SET_ERROR_WITH_MESSAGE,\r\n  SET_CONNECTED_ADDRESS,\r\n  SET_TOTAL_STAKE_LIMIT,\r\n  SET_TOTAL_STAKE,\r\n  SHOW_STAKE,\r\n  STAKE_TX_HASH,\r\n  SET_APPROVE_TX_HASH,\r\n  SET_PREAUTH_LOADING,\r\n  SET_IS_WITHDRAW_INITIATED,\r\n  SET_STAKED_AMOUNT,\r\n  SET_REWARD_VALUE,\r\n  SET_WITHDRAW_INITIATED_DATE,\r\n} from \"./actions\";\r\n\r\nconst stakeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_METAMASK:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          metamask: action.payload\r\n        }\r\n      };\r\n    case SET_CHAIN_BALANCE_BOOL:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          chainBalance: action.payload\r\n        }\r\n      };\r\n    case SET_ETH_BALANCE_BOOL:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          ethBalance: action.payload\r\n        }\r\n      };\r\n    case SET_ADDEES_NOT_STAKED:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          addressNotStaked: action.payload\r\n        }\r\n      };\r\n    case SET_CONNECTED_ADDRESS:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          connectedAddress: action.payload\r\n        }\r\n      };\r\n      case SET_IS_WITHDRAW_INITIATED:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          isWithDrawInitiated: action.payload\r\n        }\r\n      };\r\n      case SET_WITHDRAW_INITIATED_DATE:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          endDate: action.payload\r\n        }\r\n      };\r\n      case SET_STAKED_AMOUNT:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          stakedAmount: action.payload\r\n        }\r\n      };\r\n      case SET_REWARD_VALUE:\r\n      return {\r\n        ...state,\r\n        prerequisites: {\r\n          ...state.prerequisites,\r\n          rewardAmount: action.payload\r\n        }\r\n      };\r\n    case SET_CHAIN_BALANCE:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          chainBalance: action.payload,\r\n        }\r\n      };\r\n    case SET_STAKING_VALUE:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          stakingValue: action.payload,\r\n        }\r\n      };\r\n    case SET_TOTAL_STAKE_LIMIT:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          contractTotalStakeLimit: action.payload,\r\n        }\r\n      };\r\n    case SET_TOTAL_STAKE:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          contractTotalStake: action.payload,\r\n        }\r\n      };\r\n    case SHOW_STAKE:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          showStake: action.payload,\r\n        }\r\n      };\r\n    case STAKE_TX_HASH:\r\n      return {\r\n        ...state,\r\n        staking: {\r\n          ...state.staking,\r\n          stakeTxHash: action.payload,\r\n        }\r\n      };\r\n    case SET_EXISTING_ALLOWANCE:\r\n      return {\r\n        ...state,\r\n        allowance: {\r\n          ...state.allowance,\r\n          existing: action.payload,\r\n        }\r\n      };\r\n    case SET_TOAPPROVE_ALLOWANCE:\r\n      return {\r\n        ...state,\r\n        allowance: {\r\n          ...state.allowance,\r\n          toApprove: action.payload,\r\n        }\r\n      };\r\n    case SET_APPROVE_TX_HASH:\r\n      return {\r\n        ...state,\r\n        allowance: {\r\n          ...state.allowance,\r\n          approveTxHash: action.payload,\r\n        }\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          isError: action.payload,\r\n          errorMessage: \"Ooops, something happened\"\r\n        }\r\n      };\r\n    case SET_ERROR_WITH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          isError: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    case SET_PREAUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        ui: {\r\n          ...state.ui,\r\n          preAuth: {\r\n            ...state.ui.preAuth,\r\n            loading: action.payload\r\n          }\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default stakeReducer;"]},"metadata":{},"sourceType":"module"}