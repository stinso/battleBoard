{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukki\\\\Documents\\\\workspace\\\\chaingames\\\\battleBoard\\\\client\\\\src\\\\views\\\\auth\\\\ForgotPasswordView\\\\JWTRegister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, TextField, Typography, Link, makeStyles } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef'; // new\n\nimport { registerUser } from '../../../service/node.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst JWTRegister = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      policy: false,\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        history.push('/dashboard');\n\n        if (isMountedRef.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      className: clsx(classes.root, className),\n      onSubmit: handleSubmit,\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.name && errors.name),\n        fullWidth: true,\n        helperText: touched.name && errors.name,\n        label: \"Name\",\n        margin: \"normal\",\n        name: \"name\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        value: values.name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.email && errors.email),\n        fullWidth: true,\n        helperText: touched.email && errors.email,\n        label: \"Email Address\",\n        margin: \"normal\",\n        name: \"email\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"email\",\n        value: values.email,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.password && errors.password),\n        fullWidth: true,\n        helperText: touched.password && errors.password,\n        label: \"Password\",\n        margin: \"normal\",\n        name: \"password\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"password\",\n        value: values.password,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        alignItems: \"center\",\n        display: \"flex\",\n        mt: 2,\n        ml: -1,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: values.policy,\n          name: \"policy\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            component: \"a\",\n            href: \"#\",\n            color: \"secondary\",\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: errors.policy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          disabled: isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JWTRegister, \"iWpKLObIKw1PouWIGSmJO0p3/oc=\", false, function () {\n  return [useStyles, useIsMountedRef];\n});\n\n_c = JWTRegister;\nJWTRegister.propTypes = {\n  className: PropTypes.string\n};\nexport default JWTRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"JWTRegister\");","map":{"version":3,"sources":["C:/Users/mukki/Documents/workspace/chaingames/battleBoard/client/src/views/auth/ForgotPasswordView/JWTRegister.js"],"names":["React","clsx","Yup","PropTypes","Formik","Box","Button","Checkbox","FormHelperText","TextField","Typography","Link","makeStyles","useAuth","useIsMountedRef","registerUser","useStyles","root","JWTRegister","className","rest","classes","isMountedRef","email","name","password","policy","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","history","push","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormHelperText,\r\n  TextField,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\n// new\r\nimport { registerUser } from '../../../service/node.service';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst JWTRegister = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        policy: false,\r\n        submit: null\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n      })}\r\n      onSubmit={async (values, {\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        try {\r\n          history.push('/dashboard')\r\n\r\n          if (isMountedRef.current) {\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form\r\n          noValidate\r\n          className={clsx(classes.root, className)}\r\n          onSubmit={handleSubmit}\r\n          {...rest}\r\n        >\r\n          <TextField\r\n            error={Boolean(touched.name && errors.name)}\r\n            fullWidth\r\n            helperText={touched.name && errors.name}\r\n            label=\"Name\"\r\n            margin=\"normal\"\r\n            name=\"name\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email Address\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box\r\n            alignItems=\"center\"\r\n            display=\"flex\"\r\n            mt={2}\r\n            ml={-1}\r\n          >\r\n            <Checkbox\r\n              checked={values.policy}\r\n              name=\"policy\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              I have read the\r\n              {' '}\r\n              <Link\r\n                component=\"a\"\r\n                href=\"#\"\r\n                color=\"secondary\"\r\n              >\r\n                Terms and Conditions\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n          {Boolean(touched.policy && errors.policy) && (\r\n            <FormHelperText error>\r\n              {errors.policy}\r\n            </FormHelperText>\r\n          )}\r\n          {errors.submit && (\r\n            <Box mt={3}>\r\n              <FormHelperText error>\r\n                {errors.submit}\r\n              </FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box mt={2}>\r\n            <Button\r\n              color=\"secondary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nJWTRegister.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default JWTRegister;\r\n"]},"metadata":{},"sourceType":"module"}